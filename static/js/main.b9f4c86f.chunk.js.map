{"version":3,"sources":["components/Topbar.js","utils/renderSubbands.js","components/SpectrumLayout.js","components/SpectrumView.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","_ref","frequency","onFrequencyChange","onGo","onReset","showAllocations","setShowAllocations","showBands","setShowBands","region","setRegion","bands","detailedBands","suggestions","setSuggestions","isFocused","setIsFocused","useState","highlightedIndex","setHighlightedIndex","React","createElement","className","src","process","alt","style","position","type","value","onChange","e","val","target","lowerVal","toLowerCase","filtered","filter","b","label","name","includes","slice","onFocus","onBlur","setTimeout","onKeyDown","length","key","preventDefault","prev","selected","fakeEvent","elements","freq","start","toString","placeholder","onClick","top","left","width","backgroundColor","color","listStyle","margin","padding","border","zIndex","maxHeight","overflowY","map","s","i","cursor","onMouseEnter","onMouseDown","toFixed","checked","renderSubbands","svg","bandData","scale","options","arguments","undefined","barHeight","animate","externalLabelThreshold","transitionDuration","baseModeColors","cw","ssb","fm","digital","atv","satellite","experimental","mixed","selectAll","remove","parseFloat","attr","append","labelLanes","subbands","forEach","sb","xStart","barWidth","end","centerX","fill","mode","cleaned","trim","parts","split","part","getModeColor","bar","transition","duration","text","lane","_labelLanes$lane","some","pos","Math","abs","push","labelY","d3","x","SpectrumLayout","refProp","freqInput","setFreqInput","resetZoom","goToFrequency","sidebarOpen","setSidebarOpen","zoomToBand","selectedBand","setSelectedBand","instructionsOpen","setInstructionsOpen","instructionsRef","useRef","minHeight","bottom","right","borderRadius","o","aria-label","background","marginBottom","display","alignItems","gap","minWidth","justifyContent","band","ref","height","boxShadow","transform","opacity","pointerEvents","role","paddingLeft","marginTop","borderTop","Fragment","description","el","getBoundingClientRect","domain","max","range","flexWrap","seen","Set","flatMap","modeStr","has","add","fontSize","marginRight","toUpperCase","borderCollapse","borderBottom","textAlign","idx","lineHeight","truncateToFit","textElem","fullLabel","maxWidthPx","textNode","node","getComputedTextLength","truncated","SpectrumView","zoomRef","xScaleRef","markerRef","markerLabelRef","hoverLineRef","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","regionMap","US","allocationsUS","EU","allocationsEU","APAC","allocationsAPAC","allocations","console","warn","zoomLayer","allocLayer","allocTextLayer","labelLayer","markerLayer","bandGroup","xAxis","ticks","call","log","data","enter","d","usage","allocLabels","styleAllocLabels","lanes","each","cx","widthPx","this","exit","merge","hoverLine","detailedBandLanes","startPx","endPx","on","found","subbandDetails","find","marker","markerLabel","zoom","scaleExtent","translateExtent","extent","event","tx","zx","rescaleX","translate","k","tickFormat","visibleHz","formatAxis","select","markerX","fx","lastX","minSpacing","input","isNaN","bandwidth","App","marginLeft","objectFit","fontWeight","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b9f4c86f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Topbar.css';\r\n\r\nfunction Topbar({\r\n  frequency,\r\n  onFrequencyChange,\r\n  onGo,\r\n  onReset,\r\n  showAllocations,\r\n  setShowAllocations,\r\n  showBands,\r\n  setShowBands,\r\n  region,\r\n  setRegion,\r\n  bands,\r\n  detailedBands,\r\n  suggestions,\r\n  setSuggestions\r\n}) {\r\n\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\r\n\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"topbar-left\">\r\n        <img src={process.env.PUBLIC_URL + '/soundwave.png'} alt=\"waveform image\" className=\"topbar-logo\" />\r\n        <h1 className=\"topbar-title\">Spectrum Explorer</h1>\r\n      </div>\r\n      <div className=\"topbar-controls\">\r\n      <div style={{ position: 'relative' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={frequency}\r\n            onChange={(e) => {\r\n              const val = e.target.value;\r\n              onFrequencyChange(val);\r\n\r\n              const lowerVal = val.toLowerCase();\r\n              const combined = [...bands, ...detailedBands];\r\n              const filtered = combined\r\n                .filter(b => (b.label || b.name || '').toLowerCase().includes(lowerVal))\r\n                .slice(0, 5);\r\n\r\n              setSuggestions(filtered);\r\n              setHighlightedIndex(-1);\r\n            }}\r\n            onFocus={() => setIsFocused(true)}\r\n            onBlur={() => setTimeout(() => setIsFocused(false), 150)}\r\n            onKeyDown={(e) => {\r\n              if (suggestions.length === 0) return;\r\n\r\n              if (e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setHighlightedIndex((prev) => (prev + 1) % suggestions.length);\r\n              } else if (e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setHighlightedIndex((prev) =>\r\n                  prev <= 0 ? suggestions.length - 1 : prev - 1\r\n                );\r\n              } else if (e.key === 'Enter' && highlightedIndex >= 0) {\r\n                const selected = suggestions[highlightedIndex];\r\n                onFrequencyChange((selected.label || selected.name) || '');\r\n                setSuggestions([]);\r\n                const fakeEvent = {\r\n                  preventDefault: () => {},\r\n                  target: {\r\n                    elements: { freq: { value: selected.start.toString() } }\r\n                  }\r\n                };\r\n                onGo(fakeEvent);\r\n              }\r\n            }}\r\n            placeholder=\"Enter frequency or label (e.g. 144.39 MHz)\"\r\n            className=\"topbar-input\"\r\n          />\r\n          <button className=\"topbar-button\" onClick={onGo}>Go</button>\r\n\r\n          {isFocused && suggestions.length > 0 && (\r\n            <ul\r\n              style={{\r\n                position: 'absolute',\r\n                top: '100%',\r\n                left: 0,\r\n                width: '100%',\r\n                backgroundColor: '#1e1e1e',\r\n                color: '#fff',\r\n                listStyle: 'none',\r\n                margin: 0,\r\n                padding: '4px 0',\r\n                border: '1px solid #333',\r\n                zIndex: 10,\r\n                maxHeight: '150px',\r\n                overflowY: 'auto',\r\n              }}\r\n            >\r\n              {suggestions.map((s, i) => (\r\n                <li\r\n                  key={i}\r\n                  style={{\r\n                    padding: '6px 10px',\r\n                    cursor: 'pointer',\r\n                    backgroundColor: i === highlightedIndex ? '#444' : 'transparent'\r\n                  }}\r\n                  onMouseEnter={() => setHighlightedIndex(i)}\r\n                  onMouseDown={(e) => {\r\n                    e.preventDefault(); // prevent blur\r\n                    onFrequencyChange((s.label || s.name) || '');\r\n                    setSuggestions([]);\r\n                    const fakeEvent = {\r\n                      preventDefault: () => {},\r\n                      target: {\r\n                        elements: { freq: { value: s.start.toString() } }\r\n                      }\r\n                    };\r\n                    onGo(fakeEvent);\r\n                  }}\r\n                >\r\n                  {(s.label || s.name)} — {(s.start / 1e6).toFixed(3)} MHz\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <button className=\"topbar-button\" onClick={onReset}>Reset Zoom</button>\r\n\r\n        <label className=\"topbar-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showAllocations}\r\n            onChange={(e) => setShowAllocations(e.target.checked)}\r\n          />\r\n          Show Allocations\r\n        </label>\r\n\r\n        <label className=\"topbar-checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showBands}\r\n            onChange={(e) => setShowBands(e.target.checked)}\r\n          />\r\n          Show Band Markers\r\n        </label>\r\n\r\n        <select\r\n          className=\"topbar-select\"\r\n          value={region}\r\n          onChange={(e) => setRegion(e.target.value)}\r\n        >\r\n          <option value=\"US\">United States</option>\r\n          <option value=\"EU\">Europe</option>\r\n          <option value=\"APAC\">APAC</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Topbar;\r\n","// src/utils/renderSubbands.js\r\nimport * as d3 from 'd3';\r\n\r\nexport default function renderSubbands(svg, bandData, scale, options = {}) {\r\n  const {\r\n    barHeight = 12,\r\n    animate = true,\r\n    externalLabelThreshold = 40,\r\n    transitionDuration = 400,\r\n  } = options;\r\n\r\n  const baseModeColors = {\r\n    cw: '#888888',\r\n    ssb: '#ebcb8b',\r\n    fm: '#a3be8c',\r\n    digital: '#bf616a',\r\n    atv: '#b48ead',\r\n    satellite: '#5e81ac',\r\n    experimental: '#d08770',\r\n    mixed: '#88c0d0',\r\n  };\r\n\r\n  const getModeColor = (mode) => {\r\n    if (!mode) return '#555';\r\n    const cleaned = mode.trim().toLowerCase();\r\n    if (baseModeColors[cleaned]) return baseModeColors[cleaned];\r\n    const parts = cleaned.split(/[/\\s]+/);\r\n    for (const part of parts) {\r\n      if (baseModeColors[part]) return baseModeColors[part];\r\n    }\r\n    return '#999';\r\n  };\r\n\r\n  svg.selectAll(\"*\").remove();\r\n\r\n  const width = parseFloat(svg.attr(\"width\")) || 800;\r\n  svg.append(\"rect\")\r\n    .attr(\"x\", 0)\r\n    .attr(\"y\", 20)\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", barHeight)\r\n    .attr(\"fill\", \"#333\");\r\n\r\n  const labelLanes = [];\r\n  const laneSpacing = 12;\r\n\r\n  bandData.subbands.forEach((sb, i) => {\r\n    const xStart = scale(sb.start);\r\n    const xEnd = scale(sb.end);\r\n    const barWidth = xEnd - xStart;\r\n    const centerX = xStart + barWidth / 2;\r\n    const fill = getModeColor(sb.mode);\r\n    const label = sb.label.length > 20 ? sb.label.slice(0, 17) + '…' : sb.label;\r\n\r\n    const bar = svg.append(\"rect\")\r\n      .attr(\"x\", xStart)\r\n      .attr(\"y\", 20)\r\n      .attr(\"width\", 0)\r\n      .attr(\"height\", barHeight)\r\n      .attr(\"fill\", fill);\r\n\r\n    if (animate) {\r\n      bar.transition()\r\n        .duration(transitionDuration)\r\n        .attr(\"width\", barWidth);\r\n    } else {\r\n      bar.attr(\"width\", barWidth);\r\n    }\r\n\r\n    if (barWidth >= externalLabelThreshold) {\r\n      svg.append(\"text\")\r\n        .attr(\"x\", centerX)\r\n        .attr(\"y\", 30)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"#fff\")\r\n        .attr(\"font-size\", \"10px\")\r\n        .text(label)\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(transitionDuration)\r\n        .style(\"opacity\", 1);\r\n    } else {\r\n      let lane = 0;\r\n      while (\r\n        labelLanes[lane]?.some(pos => Math.abs(pos - centerX) < 50)\r\n      ) {\r\n        lane++;\r\n      }\r\n      if (!labelLanes[lane]) labelLanes[lane] = [];\r\n      labelLanes[lane].push(centerX);\r\n\r\n      const labelY = 10 - lane * laneSpacing;\r\n\r\n      svg.append(\"text\")\r\n        .attr(\"x\", centerX)\r\n        .attr(\"y\", labelY)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"#ccc\")\r\n        .attr(\"font-size\", \"9px\")\r\n        .text(label)\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(transitionDuration)\r\n        .style(\"opacity\", 1);\r\n\r\n      svg.append(\"line\")\r\n        .attr(\"x1\", centerX)\r\n        .attr(\"x2\", centerX)\r\n        .attr(\"y1\", labelY + 2)\r\n        .attr(\"y2\", 20)\r\n        .attr(\"stroke\", \"#999\")\r\n        .attr(\"stroke-width\", 1)\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .duration(transitionDuration)\r\n        .style(\"opacity\", 1);\r\n    }\r\n  });\r\n\r\n  d3.ticks(bandData.start, bandData.end, 5).forEach((freq) => {\r\n    const x = scale(freq);\r\n    svg.append(\"line\")\r\n      .attr(\"x1\", x)\r\n      .attr(\"x2\", x)\r\n      .attr(\"y1\", 32)\r\n      .attr(\"y2\", 42)\r\n      .attr(\"stroke\", \"#aaa\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"x\", x)\r\n      .attr(\"y\", 55)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ccc\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .text((freq / 1e6).toFixed(3) + \" MHz\");\r\n  });\r\n}\r\n","// src/components/SpectrumLayout.js\r\nimport React, { useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Topbar from './Topbar';\r\nimport renderSubbands from '../utils/renderSubbands';\r\n\r\nconst SpectrumLayout = ({\r\n  refProp,\r\n  freqInput,\r\n  setFreqInput,\r\n  resetZoom,\r\n  goToFrequency,\r\n  showAllocations,\r\n  setShowAllocations,\r\n  showBands,\r\n  setShowBands,\r\n  region,\r\n  setRegion,\r\n  sidebarOpen,\r\n  setSidebarOpen,\r\n  bands,\r\n  zoomToBand,\r\n  selectedBand,\r\n  setSelectedBand,\r\n  instructionsOpen,\r\n  setInstructionsOpen,\r\n  detailedBands,\r\n  suggestions,\r\n  setSuggestions\r\n}) => {\r\n  const instructionsRef = useRef(null);\r\n\r\n  return (\r\n    <div\r\n      className=\"spectrum-view-container\"\r\n      style={{ backgroundColor: '#121212', padding: '1rem', minHeight: '100vh', color: 'white' }}\r\n    >\r\n      {/* ⬆️ Topbar with all controls */}\r\n      <Topbar\r\n        frequency={freqInput}\r\n        onFrequencyChange={setFreqInput}\r\n        onGo={goToFrequency}\r\n        onReset={resetZoom}\r\n        showAllocations={showAllocations}\r\n        setShowAllocations={setShowAllocations}\r\n        showBands={showBands}\r\n        setShowBands={setShowBands}\r\n        region={region}\r\n        setRegion={setRegion}\r\n        bands={bands}\r\n        detailedBands={detailedBands}\r\n        suggestions={suggestions}\r\n        setSuggestions={setSuggestions}\r\n      />\r\n\r\n      <button\r\n        onClick={() => setInstructionsOpen(!instructionsOpen)}\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: '1rem',\r\n          right: '1rem',\r\n          backgroundColor: '#222',\r\n          color: '#fff',\r\n          border: 'none',\r\n          padding: '6px 12px',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {instructionsOpen ? 'Click To Close' : '❔ Instructions'}\r\n      </button>\r\n        \r\n      {/* ⬅️ Collapsible sidebar with band jump buttons */}\r\n      <div className={`band-sidebar ${sidebarOpen ? 'open' : 'closed'}`}>\r\n        <button\r\n          className=\"sidebar-toggle\"\r\n          onClick={() => setSidebarOpen((o) => !o)}\r\n          aria-label={sidebarOpen ? 'Collapse sidebar' : 'Open sidebar'}\r\n          style={{\r\n            background: '#222',\r\n            color: '#fff',\r\n            border: 'none',\r\n            padding: '4px 8px',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            marginBottom: '8px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '4px',\r\n            minWidth: '80px', // Ensures enough space for the label\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <span>{sidebarOpen ? '« Close' : '» Bands'}</span>\r\n        </button>\r\n\r\n        {sidebarOpen && (\r\n          <div className=\"buttons-container-wrapper\">\r\n            <div className=\"buttons-container\">\r\n              {bands.slice(0, 8).map((band, i) => (\r\n                <button key={i} className=\"band-button\" onClick={() => {\r\n                  zoomToBand(band);\r\n                  setSidebarOpen(false); // Auto-close\r\n                }}>\r\n                  {band.name || band.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        ref={instructionsRef}\r\n        className=\"instructions-sidebar\"\r\n        style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          right: 0,\r\n          width: '260px',\r\n          height: '100%',\r\n          backgroundColor: '#1e1e1e',\r\n          color: '#fff',\r\n          padding: '1rem',\r\n          boxShadow: '2px 0 10px rgba(0,0,0,0.3)',\r\n          zIndex: 999,\r\n          transform: instructionsOpen ? 'translateX(0)' : 'translateX(100%)',\r\n          opacity: instructionsOpen ? 1 : 0,\r\n          pointerEvents: instructionsOpen ? 'auto' : 'none',\r\n          transition: 'transform 0.4s ease, opacity 0.4s ease',\r\n        }}\r\n      >\r\n        <h3><span role=\"img\" aria-label=\"Instructions book\">📘</span> Instructions</h3>\r\n        <ul style={{ paddingLeft: '1rem' }}>\r\n          <li><span role=\"img\" aria-label=\"magnifying glass\">🔍</span> Use the search bar to jump to a frequency (e.g., \"144.39 MHz\").</li>\r\n          <li><span role=\"img\" aria-label=\"click\">🖱️</span> Click a band to view its sub-band breakdown.</li>\r\n          <li><span role=\"img\" aria-label=\"palette\">🎨</span> Hover to view allocation tooltips.</li>\r\n          <li><span role=\"img\" aria-label=\"zoom\">🔎</span> Zoom in to reveal detailed signal data.</li>\r\n          <li><span role=\"img\" aria-label=\"moon\">🌓</span> Dark mode UI optimized for low-glare usage.</li>\r\n        </ul>\r\n      </div>\r\n  \r\n      {/* 📊 Spectrum canvas */}\r\n      <svg ref={refProp} width=\"100%\" height=\"400px\" />\r\n  \r\n      {/* 📋 Detailed Band Information Box (or placeholder content) */}\r\n      <div\r\n        style={{\r\n          background: '#1e1e1e',\r\n          color: 'white',\r\n          padding: '1rem',\r\n          marginTop: '1rem',\r\n          borderTop: '1px solid #333',\r\n          minHeight: '200px',\r\n        }}\r\n      >\r\n        {selectedBand ? (\r\n          <>\r\n            <h3 style={{ marginTop: 0 }}>{selectedBand.label}</h3>\r\n            <p>\r\n              <strong>Frequency:</strong>{' '}\r\n              {(selectedBand.start / 1e6).toFixed(3)}–{(selectedBand.end / 1e6).toFixed(3)} MHz\r\n            </p>\r\n\r\n            {selectedBand.description && <p>{selectedBand.description}</p>}\r\n\r\n            {selectedBand.subbands && (\r\n              <>\r\n                <svg\r\n                  ref={(el) => {\r\n                    if (!el || !selectedBand) return;\r\n                    const svg = d3.select(el);\r\n                    svg.selectAll(\"*\").remove();\r\n\r\n                    const width = el.getBoundingClientRect().width;\r\n                    const height = 70;\r\n                    svg.attr(\"width\", width).attr(\"height\", height);\r\n\r\n                    const scale = d3.scaleLinear()\r\n                      .domain([Math.max(0, selectedBand.start), selectedBand.end])\r\n                      .range([0, width]);\r\n\r\n                    svg.append(\"rect\")\r\n                      .attr(\"x\", 0)\r\n                      .attr(\"y\", 20)\r\n                      .attr(\"width\", width)\r\n                      .attr(\"height\", 12)\r\n                      .attr(\"fill\", \"#333\");\r\n\r\n                    renderSubbands(svg, selectedBand, scale, {\r\n                      animate: true,\r\n                      barHeight: 12,\r\n                      externalLabelThreshold: 40,\r\n                      transitionDuration: 500,\r\n                    });\r\n                  }}\r\n                  style={{ width: '100%', height: '70px', marginTop: '10px' }}\r\n                />\r\n\r\n                {/* Legend */}\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '0.5rem' }}>\r\n                  {(() => {\r\n                    const baseModeColors = {\r\n                      cw: '#888888',\r\n                      ssb: '#ebcb8b',\r\n                      fm: '#a3be8c',\r\n                      digital: '#bf616a',\r\n                      atv: '#b48ead',\r\n                      satellite: '#5e81ac',\r\n                      experimental: '#d08770',\r\n                      mixed: '#88c0d0',\r\n                    };\r\n\r\n                    const getModeColor = (mode) => {\r\n                      if (!mode) return '#555';\r\n                      const cleaned = mode.trim().toLowerCase();\r\n                      if (baseModeColors[cleaned]) return baseModeColors[cleaned];\r\n                      const parts = cleaned.split(/[\\s/]+/);\r\n                      for (const part of parts) {\r\n                        if (baseModeColors[part]) return baseModeColors[part];\r\n                      }\r\n                      return '#999';\r\n                    };\r\n\r\n                    const seen = new Set();\r\n                    return selectedBand.subbands\r\n                      .map(sb => (sb.mode || '').trim().toLowerCase())\r\n                      .flatMap(modeStr => modeStr.split(/[\\s/]+/))\r\n                      .filter((mode) => mode && !seen.has(mode) && seen.add(mode))\r\n                      .map(mode => (\r\n                        <div key={mode} style={{ display: 'flex', alignItems: 'center', fontSize: '0.9rem' }}>\r\n                          <span style={{\r\n                            width: '14px', height: '14px',\r\n                            backgroundColor: getModeColor(mode),\r\n                            display: 'inline-block', marginRight: '6px'\r\n                          }} />\r\n                          {mode.toUpperCase()}\r\n                        </div>\r\n                      ));\r\n                  })()}\r\n                </div>\r\n\r\n                <table style={{ width: '100%', color: '#ddd', borderCollapse: 'collapse', marginTop: '1rem' }}>\r\n                  <thead>\r\n                    <tr style={{ borderBottom: '1px solid #444' }}>\r\n                      <th style={{ textAlign: 'left', padding: '4px' }}>Label</th>\r\n                      <th style={{ textAlign: 'left', padding: '4px' }}>Start</th>\r\n                      <th style={{ textAlign: 'left', padding: '4px' }}>End</th>\r\n                      <th style={{ textAlign: 'left', padding: '4px' }}>Mode</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {selectedBand.subbands.map((sb, idx) => (\r\n                      <tr key={idx} style={{ borderBottom: '1px solid #333' }}>\r\n                        <td style={{ padding: '4px' }}>{sb.label}</td>\r\n                        <td style={{ padding: '4px' }}>{(sb.start / 1e6).toFixed(3)} MHz</td>\r\n                        <td style={{ padding: '4px' }}>{(sb.end / 1e6).toFixed(3)} MHz</td>\r\n                        <td style={{ padding: '4px' }}>{sb.mode}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n\r\n            <button\r\n              style={{\r\n                marginTop: '1rem',\r\n                backgroundColor: '#333',\r\n                color: 'white',\r\n                padding: '6px 12px',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={() => setSelectedBand(null)}\r\n            >\r\n              Close\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h3 style={{ marginTop: 0 }}>Welcome to SignalAtlas</h3>\r\n            <p>Click a frequency band on the spectrum or use the search bar to explore radio signals in detail.</p>\r\n            <ul style={{ lineHeight: '1.6' }}>\r\n              <li>🔍 Search by frequency or label (e.g. \"2.4 GHz\", \"NOAA Weather Radio\")</li>\r\n              <li>📊 Click a band to inspect its sub-band breakdown</li>\r\n              <li>🖱️ Hover over the spectrum for signal info</li>\r\n              <li>🌐 Change regions to view different band plans</li>\r\n            </ul>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpectrumLayout;\r\n","// src/components/SpectrumView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport SpectrumLayout from './SpectrumLayout';\r\nimport bands from '../data/bands.json';\r\nimport detailedBands from '../data/detailedbands.json';\r\nimport allocationsUS from '../data/allocations-us.json';\r\nimport allocationsEU from '../data/allocations-eu.json';\r\nimport allocationsAPAC from '../data/allocations-apac.json';\r\nimport subbandDetails from '../data/subbands.json';\r\nimport '../styles.css';\r\n\r\n/*function getTruncatedLabel(label, pixelWidth) {\r\n  if (pixelWidth < 30) return label.slice(0, 5) + '…';\r\n  if (pixelWidth < 50) return label.slice(0, 10) + '…';\r\n  return label;\r\n}*/\r\n\r\nfunction truncateToFit(textElem, fullLabel, maxWidthPx) {\r\n  const textNode = d3.select(textElem);\r\n  textNode.text(fullLabel);\r\n\r\n  if (textNode.node().getComputedTextLength() <= maxWidthPx) return;\r\n\r\n  let truncated = fullLabel;\r\n  while (truncated.length > 1 && textNode.node().getComputedTextLength() > maxWidthPx) {\r\n    truncated = truncated.slice(0, -1);\r\n    textNode.text(truncated + \"…\");\r\n  }\r\n}\r\n\r\nconst SpectrumView = () => {\r\n  const ref = useRef();\r\n  const zoomRef = useRef();\r\n  const xScaleRef = useRef();\r\n  const markerRef = useRef();\r\n  const markerLabelRef = useRef();\r\n  const hoverLineRef = useRef();\r\n  const margin = { top: 20, right: 20, bottom: 40, left: 20 };\r\n  const [showAllocations, setShowAllocations] = useState(true);\r\n  const [showBands, setShowBands] = useState(true);\r\n  const [region, setRegion] = useState('US');\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [freqInput, setFreqInput] = useState('');\r\n  const [selectedBand, setSelectedBand] = useState(null);\r\n  const [instructionsOpen, setInstructionsOpen] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const inputRef = useRef();\r\n\r\n  const zoomToFrequency = (freq) => {\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n  \r\n    let bandwidth;\r\n    if (freq < 1e6) bandwidth = 20_000;                  // < 1 MHz: narrow view\r\n    else if (freq < 30e6) bandwidth = 1_000_000;           // HF: zoom close\r\n    else if (freq < 300e6) bandwidth = 10_000_000;          // VHF\r\n    else if (freq < 1e9) bandwidth = 150_000_000;          // UHF\r\n    else if (freq < 5e9) bandwidth = 500_000_000;         // SHF\r\n    else bandwidth = 10_000_000_000;                         // EHF and beyond\r\n\r\n    const scale = width / (x(freq + bandwidth / 2) - x(freq - bandwidth / 2));\r\n    const tx = -x(freq) * scale + width / 2;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n  \r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  \r\n    if (markerRef.current) {\r\n      markerRef.current\r\n        .attr(\"x1\", x(freq))\r\n        .attr(\"x2\", x(freq))\r\n        .attr(\"data-freq\", freq)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  \r\n    if (markerLabelRef.current) {\r\n      const label = freq >= 1e9 ? `${(freq / 1e9).toFixed(3)} GHz`\r\n        : freq >= 1e6 ? `${(freq / 1e6).toFixed(3)} MHz`\r\n        : freq >= 1e3 ? `${(freq / 1e3).toFixed(3)} kHz`\r\n        : `${freq.toFixed(0)} Hz`;\r\n      markerLabelRef.current\r\n        .attr(\"x\", x(freq))\r\n        .text(label)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  };  \r\n\r\n  const instructionsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (\r\n        instructionsOpen &&\r\n        instructionsRef.current &&\r\n        !instructionsRef.current.contains(e.target)\r\n      ) {\r\n        setInstructionsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [instructionsOpen]);\r\n\r\n  const regionMap = {\r\n        US: allocationsUS,\r\n        EU: allocationsEU,\r\n        APAC: allocationsAPAC\r\n      };\r\n  const allocations = regionMap[region];\r\n\r\n  if (!allocations) {\r\n    console.warn(\"Region allocation data not found for:\", region);\r\n  }      \r\n\r\n  useEffect(() => {\r\n    const width = 1200;\r\n    const height = 300;\r\n\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n\r\n    const svg = d3.select(ref.current)\r\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n      .style(\"background\", \"#1e1e1e\");\r\n\r\n    svg.append(\"defs\").append(\"filter\")\r\n      .attr(\"id\", \"glow\")\r\n      .append(\"feDropShadow\")\r\n      .attr(\"dx\", 0)\r\n      .attr(\"dy\", 0)\r\n      .attr(\"stdDeviation\", 2)\r\n      .attr(\"flood-color\", \"#fff\")\r\n      .attr(\"flood-opacity\", 0.7);    \r\n    \r\n    svg.append(\"defs\")\r\n      .append(\"pattern\")\r\n      .attr(\"id\", \"diagonal-stripes\")\r\n      .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n      .attr(\"width\", 8)\r\n      .attr(\"height\", 8)\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M-2,2 l4,-4 M0,8 l8,-8 M6,10 l4,-4\")\r\n      .attr(\"stroke\", \"white\")\r\n      .attr(\"stroke-opacity\", 0.05)\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    const zoomLayer = svg.append(\"g\").attr(\"class\", \"zoom-layer\");\r\n    const allocLayer = svg.append(\"g\").attr(\"class\", \"alloc-layer\");\r\n    const allocTextLayer = svg.append(\"g\").attr(\"class\", \"alloc-text-layer\");\r\n    const labelLayer = svg.append(\"g\").attr(\"class\", \"label-layer\");\r\n    const markerLayer = svg.append(\"g\").attr(\"class\", \"marker-layer\");\r\n    const bandGroup = svg.append(\"g\").attr(\"class\", \"band-group\");\r\n\r\n    const x = d3.scaleLinear()\r\n      .domain([0, 300_000_000_000])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    xScaleRef.current = x;\r\n\r\n    const xAxis = d3.axisBottom(x).ticks(12);\r\n\r\n    zoomLayer.append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n      .attr(\"class\", \"x-axis\")\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"fill\", \"#ccc\");\r\n\r\n    const formatAxis = (scale) => {\r\n      const visibleHz = scale.domain()[1] - scale.domain()[0];\r\n      if (visibleHz < 1_000) return d => `${d.toFixed(0)} Hz`;\r\n      if (visibleHz < 1_000_000) return d => `${(d / 1e3).toFixed(2)} kHz`;\r\n      if (visibleHz < 1_000_000_000) return d => `${(d / 1e6).toFixed(2)} MHz`;\r\n      return d => `${(d / 1e9).toFixed(2)} GHz`;\r\n    };\r\n\r\n    console.log(\"Region data for\", region, regionMap[region]);\r\n\r\n    allocLayer.selectAll(\"rect\")\r\n      .data(allocations || [])\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 30)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 150)\r\n      .attr(\"fill\", d => d.color || \"#555\")\r\n      .attr(\"fill-opacity\", 0.15)\r\n      .attr(\"class\", \"allocation-band\")\r\n      .style(\"display\", showAllocations ? \"block\" : \"none\")\r\n      .append(\"title\")\r\n      .text(d => `${d.label}: ${d.usage}`);\r\n\r\n    const allocLabels = allocTextLayer.selectAll(\"text\").data(allocations);\r\n    allocLabels.exit().remove();\r\n    allocLabels.enter()\r\n      .append(\"text\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#aaa\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .attr(\"x\", -9999)\r\n      .attr(\"y\", -9999)\r\n      .merge(allocLabels)\r\n      .text(d => d.label);\r\n\r\n    function styleAllocLabels(scale) {\r\n      const lanes = [];\r\n      const minSpacing = 50;\r\n      const baseY = 190;\r\n      const lineH = 14;\r\n      const minWidthPx = 30;\r\n\r\n      allocTextLayer.selectAll(\"text\")\r\n        .each(function(d) {\r\n          const cx = (scale(d.start) + scale(d.end)) / 2;\r\n          const widthPx = scale(d.end) - scale(d.start);\r\n\r\n          if (!showAllocations || widthPx < minWidthPx) {\r\n            return d3.select(this).style(\"opacity\", 0);\r\n          }\r\n\r\n          let lane = 0;\r\n          while (lanes[lane] != null && cx - lanes[lane] < minSpacing) {\r\n            lane++;\r\n          }\r\n          lanes[lane] = cx;\r\n\r\n          d3.select(this)\r\n            .attr(\"x\", cx)\r\n            .attr(\"y\", baseY + lane * lineH)\r\n            .style(\"opacity\", 1);\r\n\r\n          if (widthPx < 10) {\r\n            return d3.select(this).style(\"opacity\", 0);\r\n          }\r\n          truncateToFit(this, d.label, widthPx);\r\n        });\r\n    }\r\n\r\n    styleAllocLabels(x);\r\n\r\n    const bandsGroup = zoomLayer.append(\"g\");\r\n    bandsGroup.selectAll(\"rect\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 50)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 100)\r\n      .attr(\"fill\", \"url(#diagonal-stripes)\")\r\n      .attr(\"fill-opacity\", 1)\r\n      .attr(\"stroke\", d => d.color)\r\n      .attr(\"stroke-width\", 2)\r\n      .append(\"title\")\r\n      .text(d => d.label);\r\n\r\n    labelLayer.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x((d.start + d.end) / 2))\r\n      .attr(\"y\", 140)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#fff\")\r\n      .attr(\"font-size\", \"14px\")\r\n      .attr(\"font-weight\", \"bold\")\r\n      .text(d => d.label);\r\n\r\n    const hoverLine = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 0)\r\n      .attr(\"y2\", height)\r\n      .attr(\"stroke\", \"#888\")\r\n      .attr(\"stroke-dasharray\", \"4 2\")\r\n      .attr(\"stroke-width\", 1)\r\n      .style(\"display\", \"none\");\r\n\r\n    hoverLineRef.current = hoverLine;\r\n\r\n    // === Render detailed bands with vertical stacking to avoid overlaps ===\r\n    // Collision-avoidant rendering for detailed bands\r\n    const detailedBandLanes = [];\r\n    const detailedBandLineHeight = 10;\r\n    const detailedBandBaseY = 55;\r\n\r\n    // Rectangles for detailed bands\r\n    bandGroup.selectAll(\"rect\")\r\n    .data(detailedBands)\r\n    .enter()\r\n    .append(\"rect\")\r\n    .each(function(d) {\r\n      const startPx = x(d.start);\r\n      const endPx = x(d.end);\r\n      const widthPx = endPx - startPx;\r\n  \r\n      let lane = 0;\r\n      while (\r\n        detailedBandLanes[lane] &&\r\n        detailedBandLanes[lane].some(({ start, end }) => !(endPx < start || startPx > end))\r\n      ) {\r\n        lane++;\r\n      }\r\n  \r\n      if (!detailedBandLanes[lane]) detailedBandLanes[lane] = [];\r\n      detailedBandLanes[lane].push({ start: startPx, end: endPx });\r\n      d.lane = lane; // Store lane on data\r\n  \r\n      d3.select(this)\r\n        .attr(\"x\", startPx)\r\n        .attr(\"y\", detailedBandBaseY + lane * detailedBandLineHeight)\r\n        .attr(\"width\", widthPx)\r\n        .attr(\"height\", 8)\r\n        .attr(\"fill\", d.color || \"#ff0\")\r\n        .attr(\"opacity\", 0.8)\r\n        .style(\"cursor\", \"pointer\")\r\n        .on(\"mouseover\", function () {\r\n          d3.select(this)\r\n            .transition()\r\n            .duration(150)\r\n            .attr(\"height\", 12)\r\n            .attr(\"y\", detailedBandBaseY + lane * detailedBandLineHeight - 2)\r\n            .attr(\"opacity\", 1)\r\n            .attr(\"filter\", \"url(#glow)\");\r\n        })\r\n        .on(\"mouseout\", function () {\r\n          d3.select(this)\r\n            .transition()\r\n            .duration(150)\r\n            .attr(\"height\", 8)\r\n            .attr(\"y\", detailedBandBaseY + lane * detailedBandLineHeight)\r\n            .attr(\"opacity\", 0.8)\r\n            .attr(\"filter\", null);\r\n        })        \r\n        .on(\"click\", () => {\r\n          const found = subbandDetails.find(b =>\r\n            b.label === d.label || (b.start === d.start && b.end === d.end)\r\n          );\r\n          setSelectedBand(found || d);\r\n        })\r\n        .append(\"title\")\r\n        .text(`${d.label}\\n${d.description || ''}`);\r\n    });  \r\n\r\n    // Labels for detailed bands\r\n    bandGroup.selectAll(\"text\")\r\n    .data(detailedBands)\r\n    .enter()\r\n    .append(\"text\")\r\n    .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n    .attr(\"y\", d => detailedBandBaseY + d.lane * detailedBandLineHeight + 5) // 4 centers in 8px bar\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"middle\") // This keeps it centered vertically\r\n    .attr(\"fill\", \"#ccc\")\r\n    .attr(\"font-size\", \"9px\")\r\n    .text(d => d.label)\r\n    .style(\"pointer-events\", \"none\")\r\n    .each(function(d) {\r\n      const widthPx = x(d.end) - x(d.start);\r\n      truncateToFit(this, d.label, widthPx);\r\n    });   \r\n\r\n    const marker = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 30)\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#ff4081\")\r\n      .attr(\"stroke-width\", 2)\r\n      .style(\"display\", \"none\")\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", () => {\r\n        marker.style(\"display\", \"none\");\r\n        markerLabel.style(\"display\", \"none\");\r\n      });\r\n\r\n    const markerLabel = markerLayer.append(\"text\")\r\n      .attr(\"y\", 20)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ff4081\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .style(\"display\", \"none\")\r\n      .style(\"pointer-events\", \"none\");\r\n\r\n    markerRef.current = marker;\r\n    markerLabelRef.current = markerLabel;\r\n\r\n    const zoom = d3.zoom()\r\n      .scaleExtent([1, 1e8]) // Define zoom scale extent\r\n      .translateExtent([[0, 0], [width, height]]) // Limit translation to the width and height of the container\r\n      .extent([[0, 0], [width, height]]) // Define zooming extent (for both X and Y axes)\r\n      .on(\"zoom\", (event) => {\r\n        const transform = event.transform;\r\n\r\n        // Prevent negative X translation and set a minimum scale of 0\r\n        const tx = Math.max(transform.x, 0); // Prevent negative X translation (pan to left)\r\n        const zx = transform.rescaleX(x); // Apply rescaling to X axis\r\n        // const zoomLevel = transform.k; // Uncomment if you need to track the zoom level\r\n\r\n        svg.attr(\"transform\", transform.translate(tx).scale(transform.k)); // Apply translation and scaling\r\n\r\n        xAxis.tickFormat(formatAxis(zx));\r\n        zoomLayer.select(\".x-axis\")\r\n          .call(xAxis.scale(zx))\r\n          .selectAll(\"text\")\r\n          .attr(\"fill\", \"#ccc\");\r\n\r\n        // Adjusting the width and position of the allocation rectangles\r\n        allocLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        styleAllocLabels(zx);\r\n\r\n        // Update other layers accordingly\r\n        zoomLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        labelLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) < 40 ? \"none\" : \"block\");\r\n\r\n        // Zooming behavior for frequency bands\r\n        bandGroup.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start))\r\n          .style(\"opacity\", d => showBands && (zx(d.end) - zx(d.start)) > 1 ? 0.8 : 0);\r\n\r\n        bandGroup.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .each(function(d) {\r\n            const widthPx = zx(d.end) - zx(d.start);\r\n            truncateToFit(this, d.label, widthPx); // Truncate labels if needed\r\n          })\r\n          .style(\"opacity\", d => {\r\n            const width = zx(d.end) - zx(d.start);\r\n            return showBands && width > 40 ? 1 : 0; // Only show labels if width is large enough\r\n          });\r\n\r\n        // Handle the marker position and visibility\r\n        if (markerRef.current && markerRef.current.style(\"display\") !== \"none\") {\r\n          const markerX = +markerRef.current.attr(\"data-freq\");\r\n          const fx = zx(markerX);\r\n          markerRef.current.attr(\"x1\", fx).attr(\"x2\", fx);\r\n          markerLabelRef.current.attr(\"x\", fx);\r\n        }\r\n\r\n        if (hoverLineRef.current) hoverLineRef.current.style(\"display\", \"none\");\r\n\r\n        // Hide allocations that are too close to each other\r\n        if (showAllocations) {\r\n          let lastX = -Infinity;\r\n          const minSpacing = 50; // px between labels—you can tweak this\r\n\r\n          allocTextLayer.selectAll(\"text\")\r\n            .each(function(d) {\r\n              const cx = (zx(d.start) + zx(d.end)) / 2;\r\n              if (cx - lastX > minSpacing) {\r\n                d3.select(this).style(\"opacity\", 1);\r\n                lastX = cx;\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n    svg.call(zoom);\r\n    zoomRef.current = zoom;\r\n    setTimeout(() => {\r\n      svg.call(zoom.transform, d3.zoomIdentity);\r\n    }, 0);\r\n\r\n  }, [showAllocations, showBands, allocations, margin.bottom, margin.left, margin.right]);\r\n\r\n  const resetZoom = () => {\r\n    const svg = d3.select(ref.current);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity);\r\n    if (markerRef.current) markerRef.current.style(\"display\", \"none\");\r\n    if (markerLabelRef.current) markerLabelRef.current.style(\"display\", \"none\");\r\n  };\r\n\r\n  const zoomToBand = (band) => {\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n    const scale = width / (x(band.end) - x(band.start));\r\n    const tx = -x(band.start) * scale + margin.left;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  };\r\n\r\n  const goToFrequency = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements.freq.value.trim().toLowerCase();\r\n    let freq = parseFloat(input);\r\n    if (input.includes(\"ghz\")) freq *= 1e9;\r\n    else if (input.includes(\"mhz\")) freq *= 1e6;\r\n    else if (input.includes(\"khz\")) freq *= 1e3;\r\n    if (isNaN(freq)) return;\r\n  \r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n  \r\n    const bandwidth = 100_000;\r\n    const scale = width / (x(freq + bandwidth / 2) - x(freq - bandwidth / 2));\r\n  \r\n    // Prevent negative frequency translation\r\n    const tx = Math.max(-x(freq) * scale + width / 2, 0);  // Ensure tx is >= 0\r\n  \r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n  \r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  \r\n    if (markerRef.current) {\r\n      markerRef.current\r\n        .attr(\"x1\", x(freq))\r\n        .attr(\"x2\", x(freq))\r\n        .attr(\"data-freq\", freq)\r\n        .style(\"display\", \"block\");\r\n    }\r\n    if (markerLabelRef.current) {\r\n      const label = freq >= 1e9 ? `${(freq / 1e9).toFixed(3)} GHz`\r\n        : freq >= 1e6 ? `${(freq / 1e6).toFixed(3)} MHz`\r\n        : freq >= 1e3 ? `${(freq / 1e3).toFixed(3)} kHz`\r\n        : `${freq.toFixed(0)} Hz`;\r\n      markerLabelRef.current\r\n        .attr(\"x\", x(freq))\r\n        .text(label)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  };    \r\n\r\n  //const toggleAllocations = () => {\r\n  //  setShowAllocations(prev => !prev);\r\n  //};\r\n\r\n  return (\r\n    <SpectrumLayout\r\n      refProp={ref}\r\n      freqInput={freqInput}\r\n      setFreqInput={setFreqInput}\r\n      resetZoom={resetZoom}\r\n      goToFrequency={goToFrequency}\r\n      showAllocations={showAllocations}\r\n      setShowAllocations={setShowAllocations}\r\n      showBands={showBands}\r\n      setShowBands={setShowBands}\r\n      region={region}\r\n      setRegion={setRegion}\r\n      sidebarOpen={sidebarOpen}\r\n      setSidebarOpen={setSidebarOpen}\r\n      bands={bands}\r\n      zoomToBand={zoomToBand}\r\n      selectedBand={selectedBand}\r\n      setSelectedBand={setSelectedBand}\r\n      instructionsOpen={instructionsOpen}\r\n      setInstructionsOpen={setInstructionsOpen}\r\n      detailedBands={detailedBands}\r\n      suggestions={suggestions}\r\n      setSuggestions={setSuggestions}\r\n    />\r\n  );        \r\n};\r\n\r\nexport default SpectrumView;","import React from 'react';\r\nimport SpectrumView from './components/SpectrumView';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Header container with logo */}\r\n      <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginLeft: '20px' }}>\r\n      <img \r\n        src={process.env.PUBLIC_URL + '/favicon.png'}\r\n        alt=\"SignalAtlas Logo\"\r\n        style={{ width: '40px', height: '40px', objectFit: 'contain' }}\r\n      />\r\n        <h1 style={{ margin: '0', fontSize: '2rem', fontWeight: 'bold', color: 'white' }}>\r\n          SignalAtlas\r\n        </h1>\r\n      </div>\r\n      <SpectrumView />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}