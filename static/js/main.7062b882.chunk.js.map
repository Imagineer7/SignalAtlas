{"version":3,"sources":["components/SpectrumView.js","App.js","reportWebVitals.js","index.js"],"names":["SpectrumView","ref","useRef","zoomRef","xScaleRef","markerRef","markerLabelRef","hoverLineRef","margin","showAllocations","setShowAllocations","useState","useEffect","d3","current","selectAll","remove","svg","attr","style","append","zoomLayer","allocLayer","allocTextLayer","labelLayer","markerLayer","signalGroup","x","domain","range","xAxis","ticks","call","data","allocations","enter","d","start","end","color","text","label","usage","bandsGroup","bands","hoverLine","signals","frequency","on","_","goToFrequency","preventDefault","target","elements","freq","value","toString","description","marker","markerLabel","zoom","scaleExtent","translateExtent","extent","event","zx","transform","rescaleX","tickFormat","scale","visibleHz","toFixed","formatAxis","select","markerX","fx","e","input","trim","toLowerCase","parseFloat","includes","isNaN","width","node","getBoundingClientRect","bandwidth","tx","translate","transition","duration","React","createElement","backgroundColor","padding","minHeight","onSubmit","marginBottom","type","name","placeholder","marginRight","background","onClick","resetZoom","marginLeft","display","checked","onChange","toggleAllocations","prev","map","band","i","key","zoomToBand","border","height","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"u6fAoVeA,MA7UMA,KACnB,MAAMC,EAAMC,mBACNC,EAAUD,mBACVE,EAAYF,mBACZG,EAAYH,mBACZI,EAAiBJ,mBACjBK,EAAeL,mBACfM,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,IAChDC,EAAiBC,GAAsBC,oBAAS,GAEvDC,oBAAU,KAIRC,IAAUZ,EAAIa,SAASC,UAAU,KAAKC,SAEtC,MAAMC,EAAMJ,IAAUZ,EAAIa,SACvBI,KAAK,UAAW,gBAChBC,MAAM,aAAc,WAEvBF,EAAIG,OAAO,QACRA,OAAO,WACPF,KAAK,KAAM,oBACXA,KAAK,eAAgB,kBACrBA,KAAK,QAAS,GACdA,KAAK,SAAU,GACfE,OAAO,QACPF,KAAK,IAAK,sCACVA,KAAK,SAAU,SACfA,KAAK,iBAAkB,KACvBA,KAAK,eAAgB,GAExB,MAAMG,EAAYJ,EAAIG,OAAO,KAAKF,KAAK,QAAS,cAC1CI,EAAaL,EAAIG,OAAO,KAAKF,KAAK,QAAS,eAC3CK,EAAiBN,EAAIG,OAAO,KAAKF,KAAK,QAAS,oBAC/CM,EAAaP,EAAIG,OAAO,KAAKF,KAAK,QAAS,eAC3CO,EAAcR,EAAIG,OAAO,KAAKF,KAAK,QAAS,gBAC5CQ,EAAcT,EAAIG,OAAO,KAAKF,KAAK,QAAS,gBAE5CS,EAAId,MACPe,OAAO,CAAC,EAAG,OACXC,MAAM,CAACrB,EA9BI,KA8BiBA,IAE/BJ,EAAUU,QAAUa,EAEpB,MAAMG,EAAQjB,IAAcc,GAAGI,MAAM,IAErCV,EAAUD,OAAO,KACdF,KAAK,4BApCO,IAoC+BV,MAC3CU,KAAK,QAAS,UACdc,KAAKF,GACLf,UAAU,QACVG,KAAK,OAAQ,QAUhBI,EAAWP,UAAU,QAClBkB,KAAKC,GACLC,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEC,QACnBnB,KAAK,IAAK,IACVA,KAAK,QAASkB,GAAKT,EAAES,EAAEE,KAAOX,EAAES,EAAEC,QAClCnB,KAAK,SAAU,KACfA,KAAK,OAAQkB,GAAKA,EAAEG,OAAS,QAC7BrB,KAAK,eAAgB,KACrBA,KAAK,QAAS,mBACdC,MAAM,UAAWV,EAAkB,QAAU,QAC7CW,OAAO,SACPoB,KAAKJ,MAAQA,EAAEK,UAAUL,EAAEM,SAE9BnB,EAAeR,UAAU,QACtBkB,KAAKC,GACLC,QACAf,OAAO,QACPF,KAAK,IAAKkB,IAAMT,EAAES,EAAEC,OAASV,EAAES,EAAEE,MAAQ,GACzCpB,KAAK,IAAK,KACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QAClBsB,KAAKJ,GAAKA,EAAEK,OACZtB,MAAM,UAAWiB,GAAK3B,EAAkB,QAAU,QAErD,MAAMkC,EAAatB,EAAUD,OAAO,KAEpCuB,EAAW5B,UAAU,QAClBkB,KAAKW,GACLT,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEC,QACnBnB,KAAK,IAAK,IACVA,KAAK,QAASkB,GAAKT,EAAES,EAAEE,KAAOX,EAAES,EAAEC,QAClCnB,KAAK,SAAU,KACfA,KAAK,OAAQ,0BACbA,KAAK,eAAgB,GACrBA,KAAK,SAAUkB,GAAKA,EAAEG,OACtBrB,KAAK,eAAgB,GACrBE,OAAO,SACPoB,KAAKJ,GAAKA,EAAEK,OAEfE,EAAW5B,UAAU,QAClBkB,KAAKW,GACLT,QACAf,OAAO,QACPF,KAAK,IAAKkB,IAAMT,EAAES,EAAEC,OAASV,EAAES,EAAEE,MAAQ,GACzCpB,KAAK,IAAK,KACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QAClBsB,KAAKJ,GAAKA,EAAEK,OAEfjB,EAAWT,UAAU,QAClBkB,KAAKW,GACLT,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,GAAGS,EAAEC,MAAQD,EAAEE,KAAO,IACrCpB,KAAK,IAAK,IACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QAClBA,KAAK,cAAe,QACpBsB,KAAKJ,GAAKA,EAAEK,OAEf,MAAMI,EAAYpB,EAAYL,OAAO,QAClCF,KAAK,KAAM,GACXA,KAAK,KAvHO,KAwHZA,KAAK,SAAU,QACfA,KAAK,mBAAoB,OACzBA,KAAK,eAAgB,GACrBC,MAAM,UAAW,QAEpBZ,EAAaO,QAAU+B,EAEvBnB,EAAYX,UAAU,UACnBkB,KAAKa,GACLX,QACAf,OAAO,UACPF,KAAK,KAAMkB,GAAKT,EAAES,EAAEW,YACpB7B,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,OAAQkB,GAAKA,EAAEG,OAAS,QAC7BpB,MAAM,SAAU,WAChB6B,GAAG,QAAS,CAACC,EAAGb,IAAMc,EAAc,CAAEC,eAAgBA,OAAUC,OAAQ,CAAEC,SAAU,CAAEC,KAAM,CAAEC,MAAOnB,EAAEW,UAAUS,iBACjHR,GAAG,YAAa,CAACC,EAAGb,KACnB7B,EAAaO,QACVI,KAAK,KAAMS,EAAES,EAAEW,YACf7B,KAAK,KAAMS,EAAES,EAAEW,YACf5B,MAAM,UAAW,WAErB6B,GAAG,WAAY,KACdzC,EAAaO,QAAQK,MAAM,UAAW,UAEvCC,OAAO,SACPoB,KAAKJ,MAAQA,EAAEK,UAAUL,EAAEqB,aAAe,MAE7C/B,EAAYX,UAAU,QACnBkB,KAAKa,GACLX,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEW,YACnB7B,KAAK,IAAK,IACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QAClBsB,KAAKJ,GAAKA,EAAEK,OAEf,MAAMiB,EAASjC,EAAYL,OAAO,QAC/BF,KAAK,KAAM,IACXA,KAAK,KAlKO,IAkKQV,GACpBU,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBC,MAAM,UAAW,QACjBA,MAAM,SAAU,WAChB6B,GAAG,QAAS,KACXU,EAAOvC,MAAM,UAAW,QACxBwC,EAAYxC,MAAM,UAAW,UAG3BwC,EAAclC,EAAYL,OAAO,QACpCF,KAAK,IAAK,IACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,WACbA,KAAK,YAAa,QAClBC,MAAM,UAAW,QACjBA,MAAM,iBAAkB,QAE3Bd,EAAUS,QAAU4C,EACpBpD,EAAeQ,QAAU6C,EAEzB,MAAMC,EAAO/C,MACVgD,YAAY,CAAC,EAAG,MAChBC,gBAAgB,CAAC,CAAC,EAAG,GAAI,CA1Ld,KACC,OA0LZC,OAAO,CAAC,CAAC,EAAG,GAAI,CA3LL,KACC,OA2LZf,GAAG,OAASgB,IACX,MACMC,EADYD,EAAME,UACHC,SAASxC,GA0B9B,GAxBAG,EAAMsC,WArJUC,KAClB,MAAMC,EAAYD,EAAMzC,SAAS,GAAKyC,EAAMzC,SAAS,GACrD,OAAI0C,EAAY,IAAclC,MAAQA,EAAEmC,QAAQ,QAC5CD,EAAY,IAAkBlC,OAASA,EAAI,KAAKmC,QAAQ,SACxDD,EAAY,IAAsBlC,OAASA,EAAI,KAAKmC,QAAQ,SACzDnC,OAASA,EAAI,KAAKmC,QAAQ,UAgJdC,CAAWP,IAC5B5C,EAAUoD,OAAO,WAAWzC,KAAKF,EAAMuC,MAAMJ,IAAKlD,UAAU,QAAQG,KAAK,OAAQ,QAEjFI,EAAWP,UAAU,QAClBG,KAAK,IAAKkB,GAAK6B,EAAG7B,EAAEC,QACpBnB,KAAK,QAASkB,GAAK6B,EAAG7B,EAAEE,KAAO2B,EAAG7B,EAAEC,QAEvCd,EAAeR,UAAU,QACtBG,KAAK,IAAKkB,IAAM6B,EAAG7B,EAAEC,OAAS4B,EAAG7B,EAAEE,MAAQ,GAC3CnB,MAAM,UAAWiB,GAAM6B,EAAG7B,EAAEE,KAAO2B,EAAG7B,EAAEC,OAAU,GAAK,OAAS,SAEnEhB,EAAUN,UAAU,QACjBG,KAAK,IAAKkB,GAAK6B,EAAG7B,EAAEC,QACpBnB,KAAK,QAASkB,GAAK6B,EAAG7B,EAAEE,KAAO2B,EAAG7B,EAAEC,QAEvCb,EAAWT,UAAU,QAClBG,KAAK,IAAKkB,IAAM6B,EAAG7B,EAAEC,OAAS4B,EAAG7B,EAAEE,MAAQ,GAC3CnB,MAAM,UAAWiB,GAAM6B,EAAG7B,EAAEE,KAAO2B,EAAG7B,EAAEC,OAAU,GAAK,OAAS,SAEnEX,EAAYX,UAAU,UACnBG,KAAK,KAAMkB,GAAK6B,EAAG7B,EAAEW,YACxBrB,EAAYX,UAAU,QACnBG,KAAK,IAAKkB,GAAK6B,EAAG7B,EAAEW,YAEnB1C,EAAUS,SAAkD,SAAvCT,EAAUS,QAAQK,MAAM,WAAuB,CACtE,MAAMuD,GAAWrE,EAAUS,QAAQI,KAAK,aAClCyD,EAAKV,EAAGS,GACdrE,EAAUS,QAAQI,KAAK,KAAMyD,GAAIzD,KAAK,KAAMyD,GAC5CrE,EAAeQ,QAAQI,KAAK,IAAKyD,GAG/BpE,EAAaO,SAASP,EAAaO,QAAQK,MAAM,UAAW,UAGpEF,EAAIe,KAAK4B,GACTzD,EAAQW,QAAU8C,GACjB,CAACnD,IAEJ,MAiBMyC,EAAiB0B,IACrBA,EAAEzB,iBACF,MAAM0B,EAAQD,EAAExB,OAAOC,SAASC,KAAKC,MAAMuB,OAAOC,cAClD,IAAIzB,EAAO0B,WAAWH,GAItB,GAHIA,EAAMI,SAAS,OAAQ3B,GAAQ,IAC1BuB,EAAMI,SAAS,OAAQ3B,GAAQ,IAC/BuB,EAAMI,SAAS,SAAQ3B,GAAQ,KACpC4B,MAAM5B,GAAO,OAEjB,MAAMrC,EAAMJ,IAAUZ,EAAIa,SACpBqE,EAAQlE,EAAImE,OAAOC,wBAAwBF,MAC3CxD,EAAIvB,EAAUU,QAGduD,EAAQc,GAASxD,EAAE2B,EAAOgC,KAAiB3D,EAAE2B,EAAOgC,MACpDC,GAAM5D,EAAE2B,GAAQe,EAAQc,EAAQ,EAChCjB,EAAYrD,IAAgB2E,UAAUD,EAAI,GAAGlB,MAAMA,GAWzD,GATApD,EAAIwE,aAAaC,SAAS,KAAK1D,KAAK7B,EAAQW,QAAQoD,UAAWA,GAE3D7D,EAAUS,SACZT,EAAUS,QACPI,KAAK,KAAMS,EAAE2B,IACbpC,KAAK,KAAMS,EAAE2B,IACbpC,KAAK,YAAaoC,GAClBnC,MAAM,UAAW,SAElBb,EAAeQ,QAAS,CAC1B,MAAM2B,EAAQa,GAAQ,QAAUA,EAAO,KAAKiB,QAAQ,SAChDjB,GAAQ,QAAUA,EAAO,KAAKiB,QAAQ,SACtCjB,GAAQ,QAAUA,EAAO,KAAKiB,QAAQ,YACnCjB,EAAKiB,QAAQ,QACpBjE,EAAeQ,QACZI,KAAK,IAAKS,EAAE2B,IACZd,KAAKC,GACLtB,MAAM,UAAW,WAQxB,OACEwE,IAAAC,cAAA,OAAKzE,MAAO,CAAE0E,gBAAiB,UAAWC,QAAS,OAAQC,UAAW,QAASxD,MAAO,UACpFoD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,QAAMI,SAAU9C,EAAe/B,MAAO,CAAE8E,aAAc,SACpDN,IAAAC,cAAA,SACEM,KAAK,OACLC,KAAK,OACLC,YAAY,sCACZjF,MAAO,CAAE2E,QAAS,MAAOO,YAAa,MAAOlB,MAAO,WAEtDQ,IAAAC,cAAA,UAAQM,KAAK,SAAS/E,MAAO,CAAE2E,QAAS,WAAYQ,WAAY,OAAQ/D,MAAO,UAAW,MAC1FoD,IAAAC,cAAA,UAAQM,KAAK,SAASK,QAvEVC,KACJ3F,IAAUZ,EAAIa,SACtB2E,aAAaC,SAAS,KAAK1D,KAAK7B,EAAQW,QAAQoD,UAAWrD,KAC3DR,EAAUS,SAAST,EAAUS,QAAQK,MAAM,UAAW,QACtDb,EAAeQ,SAASR,EAAeQ,QAAQK,MAAM,UAAW,SAmEtBA,MAAO,CAAEsF,WAAY,OAAQX,QAAS,aAAc,eAEhGH,IAAAC,cAAA,SAAOzE,MAAO,CAAEuF,QAAS,QAAST,aAAc,SAC9CN,IAAAC,cAAA,SAAOM,KAAK,WAAWS,QAASlG,EAAiBmG,SAlB7BC,KACxBnG,EAAmBoG,IAASA,MAiBwD,qBAElFnB,IAAAC,cAAA,OAAKzE,MAAO,CAAE8E,aAAc,SACzBrD,EAAMmE,IAAI,CAACC,EAAMC,IAChBtB,IAAAC,cAAA,UACEsB,IAAKD,EACLV,QAASA,IAzECS,KAClB,MAAM/F,EAAMJ,IAAUZ,EAAIa,SACpBqE,EAAQlE,EAAImE,OAAOC,wBAAwBF,MAC3CxD,EAAIvB,EAAUU,QACduD,EAAQc,GAASxD,EAAEqF,EAAK1E,KAAOX,EAAEqF,EAAK3E,QACtCkD,GAAM5D,EAAEqF,EAAK3E,OAASgC,EAAQ7D,EAC9B0D,EAAYrD,IAAgB2E,UAAUD,EAAI,GAAGlB,MAAMA,GACzDpD,EAAIwE,aAAaC,SAAS,KAAK1D,KAAK7B,EAAQW,QAAQoD,UAAWA,IAkExCiD,CAAWH,GAC1B7F,MAAO,CAAEkF,YAAa,MAAOP,QAAS,UAAWQ,WAAY,OAAQ/D,MAAO,OAAQ6E,OAAQ,mBAE3FJ,EAAKb,MAAQa,EAAKvE,SAIzBkD,IAAAC,cAAA,OAAK3F,IAAKA,EAAKkF,MAAM,OAAOkC,OAAO,YCnU1BC,MATf,WACE,OACE3B,IAAAC,cAAA,OAAK2B,UAAU,OACb5B,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAC5F,EAAY,QCKJwH,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA/C,EAAA,GAAAgD,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAAC0B,EAAG,QAORE","file":"static/js/main.7062b882.chunk.js","sourcesContent":["// src/components/SpectrumView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport bands from '../data/bands.json';\r\nimport allocations from '../data/allocations.json';\r\nimport signals from '../data/signals.json';\r\n\r\nconst SpectrumView = () => {\r\n  const ref = useRef();\r\n  const zoomRef = useRef();\r\n  const xScaleRef = useRef();\r\n  const markerRef = useRef();\r\n  const markerLabelRef = useRef();\r\n  const hoverLineRef = useRef();\r\n  const margin = { top: 20, right: 20, bottom: 40, left: 20 };\r\n  const [showAllocations, setShowAllocations] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const width = 1200;\r\n    const height = 300;\r\n\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n\r\n    const svg = d3.select(ref.current)\r\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n      .style(\"background\", \"#1e1e1e\");\r\n\r\n    svg.append(\"defs\")\r\n      .append(\"pattern\")\r\n      .attr(\"id\", \"diagonal-stripes\")\r\n      .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n      .attr(\"width\", 8)\r\n      .attr(\"height\", 8)\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M-2,2 l4,-4 M0,8 l8,-8 M6,10 l4,-4\")\r\n      .attr(\"stroke\", \"white\")\r\n      .attr(\"stroke-opacity\", 0.05)\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    const zoomLayer = svg.append(\"g\").attr(\"class\", \"zoom-layer\");\r\n    const allocLayer = svg.append(\"g\").attr(\"class\", \"alloc-layer\");\r\n    const allocTextLayer = svg.append(\"g\").attr(\"class\", \"alloc-text-layer\");\r\n    const labelLayer = svg.append(\"g\").attr(\"class\", \"label-layer\");\r\n    const markerLayer = svg.append(\"g\").attr(\"class\", \"marker-layer\");\r\n    const signalGroup = svg.append(\"g\").attr(\"class\", \"signal-group\");\r\n\r\n    const x = d3.scaleLinear()\r\n      .domain([0, 300_000_000_000])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    xScaleRef.current = x;\r\n\r\n    const xAxis = d3.axisBottom(x).ticks(12);\r\n\r\n    zoomLayer.append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n      .attr(\"class\", \"x-axis\")\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"fill\", \"#ccc\");\r\n\r\n    const formatAxis = (scale) => {\r\n      const visibleHz = scale.domain()[1] - scale.domain()[0];\r\n      if (visibleHz < 1_000) return d => `${d.toFixed(0)} Hz`;\r\n      if (visibleHz < 1_000_000) return d => `${(d / 1e3).toFixed(2)} kHz`;\r\n      if (visibleHz < 1_000_000_000) return d => `${(d / 1e6).toFixed(2)} MHz`;\r\n      return d => `${(d / 1e9).toFixed(2)} GHz`;\r\n    };\r\n\r\n    allocLayer.selectAll(\"rect\")\r\n      .data(allocations)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 30)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 150)\r\n      .attr(\"fill\", d => d.color || \"#555\")\r\n      .attr(\"fill-opacity\", 0.15)\r\n      .attr(\"class\", \"allocation-band\")\r\n      .style(\"display\", showAllocations ? \"block\" : \"none\")\r\n      .append(\"title\")\r\n      .text(d => `${d.label}: ${d.usage}`);\r\n\r\n    allocTextLayer.selectAll(\"text\")\r\n      .data(allocations)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n      .attr(\"y\", 190)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#aaa\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .text(d => d.label)\r\n      .style(\"display\", d => showAllocations ? \"block\" : \"none\");\r\n\r\n    const bandsGroup = zoomLayer.append(\"g\");\r\n\r\n    bandsGroup.selectAll(\"rect\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 50)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 100)\r\n      .attr(\"fill\", \"url(#diagonal-stripes)\")\r\n      .attr(\"fill-opacity\", 1)\r\n      .attr(\"stroke\", d => d.color)\r\n      .attr(\"stroke-width\", 2)\r\n      .append(\"title\")\r\n      .text(d => d.label);\r\n\r\n    bandsGroup.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n      .attr(\"y\", 115)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ccc\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .text(d => d.label);\r\n\r\n    labelLayer.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x((d.start + d.end) / 2))\r\n      .attr(\"y\", 40)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#fff\")\r\n      .attr(\"font-size\", \"14px\")\r\n      .attr(\"font-weight\", \"bold\")\r\n      .text(d => d.label);\r\n\r\n    const hoverLine = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 0)\r\n      .attr(\"y2\", height)\r\n      .attr(\"stroke\", \"#888\")\r\n      .attr(\"stroke-dasharray\", \"4 2\")\r\n      .attr(\"stroke-width\", 1)\r\n      .style(\"display\", \"none\");\r\n\r\n    hoverLineRef.current = hoverLine;\r\n\r\n    signalGroup.selectAll(\"circle\")\r\n      .data(signals)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", d => x(d.frequency))\r\n      .attr(\"cy\", 20)\r\n      .attr(\"r\", 5)\r\n      .attr(\"fill\", d => d.color || \"#ff0\")\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", (_, d) => goToFrequency({ preventDefault: () => {}, target: { elements: { freq: { value: d.frequency.toString() } } } }))\r\n      .on(\"mouseover\", (_, d) => {\r\n        hoverLineRef.current\r\n          .attr(\"x1\", x(d.frequency))\r\n          .attr(\"x2\", x(d.frequency))\r\n          .style(\"display\", \"block\");\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        hoverLineRef.current.style(\"display\", \"none\");\r\n      })\r\n      .append(\"title\")\r\n      .text(d => `${d.label}\\n${d.description || ''}`);\r\n\r\n    signalGroup.selectAll(\"text\")\r\n      .data(signals)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x(d.frequency))\r\n      .attr(\"y\", 35)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ddd\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .text(d => d.label);\r\n\r\n    const marker = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 30)\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#ff4081\")\r\n      .attr(\"stroke-width\", 2)\r\n      .style(\"display\", \"none\")\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", () => {\r\n        marker.style(\"display\", \"none\");\r\n        markerLabel.style(\"display\", \"none\");\r\n      });\r\n\r\n    const markerLabel = markerLayer.append(\"text\")\r\n      .attr(\"y\", 20)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ff4081\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .style(\"display\", \"none\")\r\n      .style(\"pointer-events\", \"none\");\r\n\r\n    markerRef.current = marker;\r\n    markerLabelRef.current = markerLabel;\r\n\r\n    const zoom = d3.zoom()\r\n      .scaleExtent([1, 1e8])\r\n      .translateExtent([[0, 0], [width, height]])\r\n      .extent([[0, 0], [width, height]])\r\n      .on(\"zoom\", (event) => {\r\n        const transform = event.transform;\r\n        const zx = transform.rescaleX(x);\r\n\r\n        xAxis.tickFormat(formatAxis(zx));\r\n        zoomLayer.select(\".x-axis\").call(xAxis.scale(zx)).selectAll(\"text\").attr(\"fill\", \"#ccc\");\r\n\r\n        allocLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        allocTextLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) < 40 ? \"none\" : \"block\");\r\n\r\n        zoomLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        labelLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) < 40 ? \"none\" : \"block\");\r\n\r\n        signalGroup.selectAll(\"circle\")\r\n          .attr(\"cx\", d => zx(d.frequency));\r\n        signalGroup.selectAll(\"text\")\r\n          .attr(\"x\", d => zx(d.frequency));\r\n\r\n        if (markerRef.current && markerRef.current.style(\"display\") !== \"none\") {\r\n          const markerX = +markerRef.current.attr(\"data-freq\");\r\n          const fx = zx(markerX);\r\n          markerRef.current.attr(\"x1\", fx).attr(\"x2\", fx);\r\n          markerLabelRef.current.attr(\"x\", fx);\r\n        }\r\n\r\n        if (hoverLineRef.current) hoverLineRef.current.style(\"display\", \"none\");\r\n      });\r\n\r\n    svg.call(zoom);\r\n    zoomRef.current = zoom;\r\n  }, [showAllocations]);\r\n\r\n  const resetZoom = () => {\r\n    const svg = d3.select(ref.current);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity);\r\n    if (markerRef.current) markerRef.current.style(\"display\", \"none\");\r\n    if (markerLabelRef.current) markerLabelRef.current.style(\"display\", \"none\");\r\n  };\r\n\r\n  const zoomToBand = (band) => {\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n    const scale = width / (x(band.end) - x(band.start));\r\n    const tx = -x(band.start) * scale + margin.left;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  };\r\n\r\n  const goToFrequency = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements.freq.value.trim().toLowerCase();\r\n    let freq = parseFloat(input);\r\n    if (input.includes(\"ghz\")) freq *= 1e9;\r\n    else if (input.includes(\"mhz\")) freq *= 1e6;\r\n    else if (input.includes(\"khz\")) freq *= 1e3;\r\n    if (isNaN(freq)) return;\r\n\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n\r\n    const bandwidth = 100_000;\r\n    const scale = width / (x(freq + bandwidth / 2) - x(freq - bandwidth / 2));\r\n    const tx = -x(freq) * scale + width / 2;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n\r\n    if (markerRef.current) {\r\n      markerRef.current\r\n        .attr(\"x1\", x(freq))\r\n        .attr(\"x2\", x(freq))\r\n        .attr(\"data-freq\", freq)\r\n        .style(\"display\", \"block\");\r\n    }\r\n    if (markerLabelRef.current) {\r\n      const label = freq >= 1e9 ? `${(freq / 1e9).toFixed(3)} GHz`\r\n        : freq >= 1e6 ? `${(freq / 1e6).toFixed(3)} MHz`\r\n        : freq >= 1e3 ? `${(freq / 1e3).toFixed(3)} kHz`\r\n        : `${freq.toFixed(0)} Hz`;\r\n      markerLabelRef.current\r\n        .attr(\"x\", x(freq))\r\n        .text(label)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  };\r\n\r\n  const toggleAllocations = () => {\r\n    setShowAllocations(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#121212', padding: '1rem', minHeight: '100vh', color: 'white' }}>\r\n      <h2>SignalAtlas</h2>\r\n      <form onSubmit={goToFrequency} style={{ marginBottom: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"freq\"\r\n          placeholder=\"Enter frequency (e.g. 4625, 2.4GHz)\"\r\n          style={{ padding: '6px', marginRight: '8px', width: '200px' }}\r\n        />\r\n        <button type=\"submit\" style={{ padding: '6px 12px', background: '#333', color: 'white' }}>Go</button>\r\n        <button type=\"button\" onClick={resetZoom} style={{ marginLeft: '10px', padding: '6px 12px' }}>Reset Zoom</button>\r\n      </form>\r\n      <label style={{ display: 'block', marginBottom: '10px' }}>\r\n        <input type=\"checkbox\" checked={showAllocations} onChange={toggleAllocations} /> Show Allocations\r\n      </label>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        {bands.map((band, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => zoomToBand(band)}\r\n            style={{ marginRight: '6px', padding: '4px 8px', background: '#222', color: '#fff', border: '1px solid #444' }}\r\n          >\r\n            {band.name || band.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <svg ref={ref} width=\"100%\" height=\"400px\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpectrumView;","import React from 'react';\nimport SpectrumView from './components/SpectrumView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>📡 SignalAtlas</h1>\n      <SpectrumView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}