{"version":3,"sources":["components/SpectrumView.js","App.js","reportWebVitals.js","index.js"],"names":["SpectrumView","ref","useRef","zoomRef","xScaleRef","markerRef","markerLabelRef","hoverLineRef","margin","showAllocations","setShowAllocations","useState","showSignals","setShowSignals","useEffect","d3","current","selectAll","remove","svg","attr","style","append","zoomLayer","allocLayer","allocTextLayer","labelLayer","markerLayer","signalGroup","x","domain","range","xAxis","ticks","call","data","allocations","enter","d","start","end","color","text","label","usage","allocLabels","styleAllocLabels","scale","lanes","each","cx","widthPx","this","lane","exit","merge","bands","hoverLine","signals","description","marker","on","markerLabel","zoom","scaleExtent","translateExtent","extent","event","transform","zx","rescaleX","k","tickFormat","visibleHz","toFixed","formatAxis","select","width","markerX","fx","lastX","minSpacing","React","createElement","backgroundColor","padding","minHeight","onSubmit","e","preventDefault","input","target","elements","freq","value","trim","toLowerCase","parseFloat","includes","isNaN","node","getBoundingClientRect","bandwidth","tx","translate","transition","duration","marginBottom","type","name","placeholder","marginRight","background","onClick","resetZoom","marginLeft","checked","onChange","map","band","i","key","zoomToBand","border","height","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iqtBA2ZeA,MApZMA,KACnB,MAAMC,EAAMC,mBACNC,EAAUD,mBACVE,EAAYF,mBACZG,EAAYH,mBACZI,EAAiBJ,mBACjBK,EAAeL,mBACfM,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,IAChDC,EAAiBC,GAAsBC,oBAAS,IAChDC,EAAaC,GAAkBF,oBAAS,GAE/CG,oBAAU,KAIRC,IAAUd,EAAIe,SAASC,UAAU,KAAKC,SAEtC,MAAMC,EAAMJ,IAAUd,EAAIe,SACvBI,KAAK,UAAW,gBAChBC,MAAM,aAAc,WAEvBF,EAAIG,OAAO,QACRA,OAAO,WACPF,KAAK,KAAM,oBACXA,KAAK,eAAgB,kBACrBA,KAAK,QAAS,GACdA,KAAK,SAAU,GACfE,OAAO,QACPF,KAAK,IAAK,sCACVA,KAAK,SAAU,SACfA,KAAK,iBAAkB,KACvBA,KAAK,eAAgB,GAExB,MAAMG,EAAYJ,EAAIG,OAAO,KAAKF,KAAK,QAAS,cAC1CI,EAAaL,EAAIG,OAAO,KAAKF,KAAK,QAAS,eAC3CK,EAAiBN,EAAIG,OAAO,KAAKF,KAAK,QAAS,oBAC/CM,EAAaP,EAAIG,OAAO,KAAKF,KAAK,QAAS,eAC3CO,EAAcR,EAAIG,OAAO,KAAKF,KAAK,QAAS,gBAC5CQ,EAAcT,EAAIG,OAAO,KAAKF,KAAK,QAAS,gBAE5CS,EAAId,MACPe,OAAO,CAAC,EAAG,OACXC,MAAM,CAACvB,EA9BI,KA8BiBA,IAE/BJ,EAAUY,QAAUa,EAEpB,MAAMG,EAAQjB,IAAcc,GAAGI,MAAM,IAErCV,EAAUD,OAAO,KACdF,KAAK,4BApCO,IAoC+BZ,MAC3CY,KAAK,QAAS,UACdc,KAAKF,GACLf,UAAU,QACVG,KAAK,OAAQ,QAUhBI,EAAWP,UAAU,QAClBkB,KAAKC,GACLC,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEC,QACnBnB,KAAK,IAAK,IACVA,KAAK,QAASkB,GAAKT,EAAES,EAAEE,KAAOX,EAAES,EAAEC,QAClCnB,KAAK,SAAU,KACfA,KAAK,OAAQkB,GAAKA,EAAEG,OAAS,QAC7BrB,KAAK,eAAgB,KACrBA,KAAK,QAAS,mBACdC,MAAM,UAAWZ,EAAkB,QAAU,QAC7Ca,OAAO,SACPoB,KAAKJ,MAAQA,EAAEK,UAAUL,EAAEM,SAG5B,MAAMC,EAAcpB,EAAeR,UAAU,QAAQkB,KAAKC,GAgB1D,SAASU,EAAiBC,GACxB,MAAMC,EAAa,GAMnBvB,EAAeR,UAAU,QACtBgC,KAAK,SAASX,GACb,MAAMY,GAAWH,EAAMT,EAAEC,OAASQ,EAAMT,EAAEE,MAAQ,EAC5CW,EAAUJ,EAAMT,EAAEE,KAAOO,EAAMT,EAAEC,OAGvC,IAAK9B,GAAmB0C,EART,GASb,OAAOpC,IAAUqC,MAAM/B,MAAM,UAAW,GAI1C,IAAIgC,EAAO,EACX,KAAsB,MAAfL,EAAMK,IAAiBH,EAAKF,EAAMK,GAjB1B,IAkBbA,IAEFL,EAAMK,GAAQH,EAGdnC,IAAUqC,MACPhC,KAAK,IAAK8B,GACV9B,KAAK,IAxBO,IACA,GAuBMiC,GAClBhC,MAAM,UAAW,KAzC1BwB,EAAYS,OAAOpC,SAGnB2B,EAAYR,QACTf,OAAO,QACLF,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QACpBmC,MAAMV,GAEJH,KAAKJ,GAAKA,EAAEK,OAoCjBG,EAAiBjB,GAEAN,EAAUD,OAAO,KAEzBL,UAAU,QAClBkB,KAAKqB,GACLnB,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEC,QACnBnB,KAAK,IAAK,IACVA,KAAK,QAASkB,GAAKT,EAAES,EAAEE,KAAOX,EAAES,EAAEC,QAClCnB,KAAK,SAAU,KACfA,KAAK,OAAQ,0BACbA,KAAK,eAAgB,GACrBA,KAAK,SAAUkB,GAAKA,EAAEG,OACtBrB,KAAK,eAAgB,GACrBE,OAAO,SACPoB,KAAKJ,GAAKA,EAAEK,OAEfjB,EAAWT,UAAU,QAClBkB,KAAKqB,GACLnB,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,GAAGS,EAAEC,MAAQD,EAAEE,KAAO,IACrCpB,KAAK,IAAK,KACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,QAClBA,KAAK,cAAe,QACpBsB,KAAKJ,GAAKA,EAAEK,OAEf,MAAMc,EAAY9B,EAAYL,OAAO,QAClCF,KAAK,KAAM,GACXA,KAAK,KApJO,KAqJZA,KAAK,SAAU,QACfA,KAAK,mBAAoB,OACzBA,KAAK,eAAgB,GACrBC,MAAM,UAAW,QAEpBd,EAAaS,QAAUyC,EAEvB7B,EAAYX,UAAU,QACnBkB,KAAKuB,GACLrB,QACAf,OAAO,QACPF,KAAK,IAAKkB,GAAKT,EAAES,EAAEC,QACnBnB,KAAK,IAAK,KACVA,KAAK,QAASkB,GAAKT,EAAES,EAAEE,KAAOX,EAAES,EAAEC,QAClCnB,KAAK,SAAU,GACfA,KAAK,OAAQkB,GAAKA,EAAEG,OAAS,QAC7BrB,KAAK,UAAW,IAChBE,OAAO,SACPoB,KAAKJ,MAAQA,EAAEK,UAAUL,EAAEqB,aAAe,MAE7C/B,EAAYX,UAAU,QACnBkB,KAAKuB,GACLrB,QACAf,OAAO,QACPF,KAAK,IAAKkB,IAAMT,EAAES,EAAEC,OAASV,EAAES,EAAEE,MAAQ,GACzCpB,KAAK,IAAK,KACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,QACbA,KAAK,YAAa,OAClBsB,KAAKJ,GAAKA,EAAEK,OAEf,MAAMiB,EAASjC,EAAYL,OAAO,QAC/BF,KAAK,KAAM,IACXA,KAAK,KAtLO,IAsLQZ,GACpBY,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBC,MAAM,UAAW,QACjBA,MAAM,SAAU,WAChBwC,GAAG,QAAS,KACXD,EAAOvC,MAAM,UAAW,QACxByC,EAAYzC,MAAM,UAAW,UAG3ByC,EAAcnC,EAAYL,OAAO,QACpCF,KAAK,IAAK,IACVA,KAAK,cAAe,UACpBA,KAAK,OAAQ,WACbA,KAAK,YAAa,QAClBC,MAAM,UAAW,QACjBA,MAAM,iBAAkB,QAE3BhB,EAAUW,QAAU4C,EACpBtD,EAAeU,QAAU8C,EAEzB,MAAMC,EAAOhD,MACViD,YAAY,CAAC,EAAG,MAChBC,gBAAgB,CAAC,CAAC,EAAG,GAAI,CA9Md,KACC,OA8MZC,OAAO,CAAC,CAAC,EAAG,GAAI,CA/ML,KACC,OA+MZL,GAAG,OAASM,IACX,MAAMC,EAAYD,EAAMC,UAClBC,EAAKD,EAAUE,SAASzC,GAkC9B,GAjCkBuC,EAAUG,EAE5BvC,EAAMwC,WA1KUzB,KAClB,MAAM0B,EAAY1B,EAAMjB,SAAS,GAAKiB,EAAMjB,SAAS,GACrD,OAAI2C,EAAY,IAAcnC,MAAQA,EAAEoC,QAAQ,QAC5CD,EAAY,IAAkBnC,OAASA,EAAI,KAAKoC,QAAQ,SACxDD,EAAY,IAAsBnC,OAASA,EAAI,KAAKoC,QAAQ,SACzDpC,OAASA,EAAI,KAAKoC,QAAQ,UAqKdC,CAAWN,IAC5B9C,EAAUqD,OAAO,WAAW1C,KAAKF,EAAMe,MAAMsB,IAAKpD,UAAU,QAAQG,KAAK,OAAQ,QAEjFI,EAAWP,UAAU,QAClBG,KAAK,IAAKkB,GAAK+B,EAAG/B,EAAEC,QACpBnB,KAAK,QAASkB,GAAK+B,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,QAErCO,EAAiBuB,GAEnB9C,EAAUN,UAAU,QACjBG,KAAK,IAAKkB,GAAK+B,EAAG/B,EAAEC,QACpBnB,KAAK,QAASkB,GAAK+B,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,QAEvCb,EAAWT,UAAU,QAClBG,KAAK,IAAKkB,IAAM+B,EAAG/B,EAAEC,OAAS8B,EAAG/B,EAAEE,MAAQ,GAC3CnB,MAAM,UAAWiB,GAAM+B,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,OAAU,GAAK,OAAS,SAInEX,EAAYX,UAAU,QACnBG,KAAK,IAAKkB,GAAK+B,EAAG/B,EAAEC,QACpBnB,KAAK,QAASkB,GAAK+B,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,QACpClB,MAAM,UAAWiB,GAAK1B,GAAgByD,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,OAAU,EAAI,GAAM,GAE9EX,EAAYX,UAAU,QACnBG,KAAK,IAAKkB,IAAM+B,EAAG/B,EAAEC,OAAS8B,EAAG/B,EAAEE,MAAQ,GAC3CnB,MAAM,UAAWiB,IAChB,MAAMuC,EAAQR,EAAG/B,EAAEE,KAAO6B,EAAG/B,EAAEC,OAC/B,OAAO3B,GAAeiE,EAAQ,GAAK,EAAI,IAGvCxE,EAAUW,SAAkD,SAAvCX,EAAUW,QAAQK,MAAM,WAAuB,CACtE,MAAMyD,GAAWzE,EAAUW,QAAQI,KAAK,aAClC2D,EAAKV,EAAGS,GACdzE,EAAUW,QAAQI,KAAK,KAAM2D,GAAI3D,KAAK,KAAM2D,GAC5CzE,EAAeU,QAAQI,KAAK,IAAK2D,GAMnC,GAHIxE,EAAaS,SAAST,EAAaS,QAAQK,MAAM,UAAW,QAG5DZ,EAAiB,CACrB,IAAIuE,GAAQ,IACZ,MAAMC,EAAa,GAEnBxD,EAAeR,UAAU,QACtBgC,KAAK,SAASX,GACb,MAAMY,GAAMmB,EAAG/B,EAAEC,OAAS8B,EAAG/B,EAAEE,MAAQ,EACnCU,EAAK8B,EAAQC,IACflE,IAAUqC,MAAM/B,MAAM,UAAW,GACjC2D,EAAQ9B,QAMlB/B,EAAIe,KAAK6B,GACT5D,EAAQa,QAAU+C,GACjB,CAACtD,EAAiBG,IA8DrB,OACEsE,IAAAC,cAAA,OAAK9D,MAAO,CAAE+D,gBAAiB,UAAWC,QAAS,OAAQC,UAAW,QAAS7C,MAAO,UACpFyC,IAAAC,cAAA,UAAI,eAEJD,IAAAC,cAAA,QAAMI,SA/CaC,IACrBA,EAAEC,iBACF,MAAMC,EAAQF,EAAEG,OAAOC,SAASC,KAAKC,MAAMC,OAAOC,cAClD,IAAIH,EAAOI,WAAWP,GAItB,GAHIA,EAAMQ,SAAS,OAAQL,GAAQ,IAC1BH,EAAMQ,SAAS,OAAQL,GAAQ,IAC/BH,EAAMQ,SAAS,SAAQL,GAAQ,KACpCM,MAAMN,GAAO,OAEjB,MAAM1E,EAAMJ,IAAUd,EAAIe,SACpB6D,EAAQ1D,EAAIiF,OAAOC,wBAAwBxB,MAC3ChD,EAAIzB,EAAUY,QAGd+B,EAAQ8B,GAAShD,EAAEgE,EAAOS,KAAiBzE,EAAEgE,EAAOS,MACpDC,GAAM1E,EAAEgE,GAAQ9C,EAAQ8B,EAAQ,EAChCT,EAAYrD,IAAgByF,UAAUD,EAAI,GAAGxD,MAAMA,GAWzD,GATA5B,EAAIsF,aAAaC,SAAS,KAAKxE,KAAK/B,EAAQa,QAAQoD,UAAWA,GAE3D/D,EAAUW,SACZX,EAAUW,QACPI,KAAK,KAAMS,EAAEgE,IACbzE,KAAK,KAAMS,EAAEgE,IACbzE,KAAK,YAAayE,GAClBxE,MAAM,UAAW,SAElBf,EAAeU,QAAS,CAC1B,MAAM2B,EAAQkD,GAAQ,QAAUA,EAAO,KAAKnB,QAAQ,SAChDmB,GAAQ,QAAUA,EAAO,KAAKnB,QAAQ,SACtCmB,GAAQ,QAAUA,EAAO,KAAKnB,QAAQ,YACnCmB,EAAKnB,QAAQ,QACpBpE,EAAeU,QACZI,KAAK,IAAKS,EAAEgE,IACZnD,KAAKC,GACLtB,MAAM,UAAW,WAYWA,MAAO,CAAEsF,aAAc,SACpDzB,IAAAC,cAAA,SACEyB,KAAK,OACLC,KAAK,OACLC,YAAY,sCACZzF,MAAO,CAAEgE,QAAS,MAAO0B,YAAa,MAAOlC,MAAO,WAEtDK,IAAAC,cAAA,UAAQyB,KAAK,SAASvF,MAAO,CAAEgE,QAAS,WAAY2B,WAAY,OAAQvE,MAAO,UAAW,MAC1FyC,IAAAC,cAAA,UAAQyB,KAAK,SAASK,QAxEVC,KACJnG,IAAUd,EAAIe,SACtByF,aAAaC,SAAS,KAAKxE,KAAK/B,EAAQa,QAAQoD,UAAWrD,KAC3DV,EAAUW,SAASX,EAAUW,QAAQK,MAAM,UAAW,QACtDf,EAAeU,SAASV,EAAeU,QAAQK,MAAM,UAAW,SAoEtBA,MAAO,CAAE8F,WAAY,OAAQ9B,QAAS,aAAc,eAGhGH,IAAAC,cAAA,OAAK9D,MAAO,CAAEsF,aAAc,SAC1BzB,IAAAC,cAAA,SAAO9D,MAAO,CAAE0F,YAAa,SAC3B7B,IAAAC,cAAA,SACEyB,KAAK,WACLQ,QAAS3G,EACT4G,SAAUA,IAAM3G,GAAoBD,GACpCY,MAAO,CAAE0F,YAAa,SACtB,oBAGJ7B,IAAAC,cAAA,aACED,IAAAC,cAAA,SACEyB,KAAK,WACLQ,QAASxG,EACTyG,SAAUA,IAAMxG,GAAgBD,GAChCS,MAAO,CAAE0F,YAAa,SACtB,sBAKN7B,IAAAC,cAAA,OAAK9D,MAAO,CAAEsF,aAAc,SACzBnD,EAAM8D,IAAI,CAACC,EAAMC,IAChBtC,IAAAC,cAAA,UACEsC,IAAKD,EACLP,QAASA,IA7FCM,KAClB,MAAMpG,EAAMJ,IAAUd,EAAIe,SACpB6D,EAAQ1D,EAAIiF,OAAOC,wBAAwBxB,MAC3ChD,EAAIzB,EAAUY,QACd+B,EAAQ8B,GAAShD,EAAE0F,EAAK/E,KAAOX,EAAE0F,EAAKhF,QACtCgE,GAAM1E,EAAE0F,EAAKhF,OAASQ,EAAQvC,EAC9B4D,EAAYrD,IAAgByF,UAAUD,EAAI,GAAGxD,MAAMA,GACzD5B,EAAIsF,aAAaC,SAAS,KAAKxE,KAAK/B,EAAQa,QAAQoD,UAAWA,IAsFxCsD,CAAWH,GAC1BlG,MAAO,CACL0F,YAAa,MACb1B,QAAS,UACT2B,WAAY,OACZvE,MAAO,OACPkF,OAAQ,mBAGTJ,EAAKV,MAAQU,EAAK5E,SAKzBuC,IAAAC,cAAA,OAAKlF,IAAKA,EAAK4E,MAAM,OAAO+C,OAAO,YC1Y1BC,MATf,WACE,OACE3C,IAAAC,cAAA,OAAK2C,UAAU,OACb5C,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACnF,EAAY,QCKJ+H,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA1C,EAAA,GAAA2C,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7D,IAAAC,cAACD,IAAM8D,WAAU,KACf9D,IAAAC,cAAC0C,EAAG,QAORE","file":"static/js/main.8a9b704e.chunk.js","sourcesContent":["// src/components/SpectrumView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport bands from '../data/bands.json';\r\nimport allocations from '../data/allocations.json';\r\nimport signals from '../data/detailedbands.json';\r\n\r\nconst SpectrumView = () => {\r\n  const ref = useRef();\r\n  const zoomRef = useRef();\r\n  const xScaleRef = useRef();\r\n  const markerRef = useRef();\r\n  const markerLabelRef = useRef();\r\n  const hoverLineRef = useRef();\r\n  const margin = { top: 20, right: 20, bottom: 40, left: 20 };\r\n  const [showAllocations, setShowAllocations] = useState(true);\r\n  const [showSignals, setShowSignals] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const width = 1200;\r\n    const height = 300;\r\n\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n\r\n    const svg = d3.select(ref.current)\r\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n      .style(\"background\", \"#1e1e1e\");\r\n\r\n    svg.append(\"defs\")\r\n      .append(\"pattern\")\r\n      .attr(\"id\", \"diagonal-stripes\")\r\n      .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n      .attr(\"width\", 8)\r\n      .attr(\"height\", 8)\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M-2,2 l4,-4 M0,8 l8,-8 M6,10 l4,-4\")\r\n      .attr(\"stroke\", \"white\")\r\n      .attr(\"stroke-opacity\", 0.05)\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    const zoomLayer = svg.append(\"g\").attr(\"class\", \"zoom-layer\");\r\n    const allocLayer = svg.append(\"g\").attr(\"class\", \"alloc-layer\");\r\n    const allocTextLayer = svg.append(\"g\").attr(\"class\", \"alloc-text-layer\");\r\n    const labelLayer = svg.append(\"g\").attr(\"class\", \"label-layer\");\r\n    const markerLayer = svg.append(\"g\").attr(\"class\", \"marker-layer\");\r\n    const signalGroup = svg.append(\"g\").attr(\"class\", \"signal-group\");\r\n\r\n    const x = d3.scaleLinear()\r\n      .domain([0, 300_000_000_000])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    xScaleRef.current = x;\r\n\r\n    const xAxis = d3.axisBottom(x).ticks(12);\r\n\r\n    zoomLayer.append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n      .attr(\"class\", \"x-axis\")\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"fill\", \"#ccc\");\r\n\r\n    const formatAxis = (scale) => {\r\n      const visibleHz = scale.domain()[1] - scale.domain()[0];\r\n      if (visibleHz < 1_000) return d => `${d.toFixed(0)} Hz`;\r\n      if (visibleHz < 1_000_000) return d => `${(d / 1e3).toFixed(2)} kHz`;\r\n      if (visibleHz < 1_000_000_000) return d => `${(d / 1e6).toFixed(2)} MHz`;\r\n      return d => `${(d / 1e9).toFixed(2)} GHz`;\r\n    };\r\n\r\n    allocLayer.selectAll(\"rect\")\r\n      .data(allocations)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 30)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 150)\r\n      .attr(\"fill\", d => d.color || \"#555\")\r\n      .attr(\"fill-opacity\", 0.15)\r\n      .attr(\"class\", \"allocation-band\")\r\n      .style(\"display\", showAllocations ? \"block\" : \"none\")\r\n      .append(\"title\")\r\n      .text(d => `${d.label}: ${d.usage}`);\r\n\r\n      // ❶ bind data\r\n      const allocLabels = allocTextLayer.selectAll(\"text\").data(allocations);\r\n\r\n      // ❷ remove any old labels\r\n      allocLabels.exit().remove();\r\n\r\n      // ❸ append any new labels, then merge to get full update selection\r\n      allocLabels.enter()\r\n        .append(\"text\")\r\n          .attr(\"text-anchor\", \"middle\")\r\n          .attr(\"fill\", \"#aaa\")\r\n          .attr(\"font-size\", \"10px\")\r\n        .merge(allocLabels)\r\n          // (we’ll set x/y & opacity via styleAllocLabels)\r\n          .text(d => d.label);\r\n        \r\n      // Collision‐avoidant positioning for allocation labels\r\n      function styleAllocLabels(scale) {\r\n        const lanes      = [];\r\n        const minSpacing = 50;   // px between adjacent labels\r\n        const baseY      = 190;  // first row Y\r\n        const lineH      = 14;   // row height increment\r\n        const minWidthPx = 30;   // hide labels narrower than 30px\r\n      \r\n        allocTextLayer.selectAll(\"text\")\r\n          .each(function(d) {\r\n            const cx      = (scale(d.start) + scale(d.end)) / 2;\r\n            const widthPx = scale(d.end) - scale(d.start);\r\n      \r\n            // 1) if toggled off or too narrow, hide and skip lane logic entirely\r\n            if (!showAllocations || widthPx < minWidthPx) {\r\n              return d3.select(this).style(\"opacity\", 0);\r\n            }\r\n      \r\n            // 2) find the first lane with enough room\r\n            let lane = 0;\r\n            while (lanes[lane] != null && cx - lanes[lane] < minSpacing) {\r\n              lane++;\r\n            }\r\n            lanes[lane] = cx;\r\n      \r\n            // 3) position & show\r\n            d3.select(this)\r\n              .attr(\"x\", cx)\r\n              .attr(\"y\", baseY + lane * lineH)\r\n              .style(\"opacity\", 1);\r\n          });\r\n      }      \r\n\r\n      // Initial call at load\r\n      styleAllocLabels(x);\r\n\r\n    const bandsGroup = zoomLayer.append(\"g\");\r\n\r\n    bandsGroup.selectAll(\"rect\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 50)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 100)\r\n      .attr(\"fill\", \"url(#diagonal-stripes)\")\r\n      .attr(\"fill-opacity\", 1)\r\n      .attr(\"stroke\", d => d.color)\r\n      .attr(\"stroke-width\", 2)\r\n      .append(\"title\")\r\n      .text(d => d.label);\r\n\r\n    labelLayer.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x((d.start + d.end) / 2))\r\n      .attr(\"y\", 140)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#fff\")\r\n      .attr(\"font-size\", \"14px\")\r\n      .attr(\"font-weight\", \"bold\")\r\n      .text(d => d.label);\r\n\r\n    const hoverLine = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 0)\r\n      .attr(\"y2\", height)\r\n      .attr(\"stroke\", \"#888\")\r\n      .attr(\"stroke-dasharray\", \"4 2\")\r\n      .attr(\"stroke-width\", 1)\r\n      .style(\"display\", \"none\");\r\n\r\n    hoverLineRef.current = hoverLine;\r\n\r\n    signalGroup.selectAll(\"rect\")\r\n      .data(signals)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 160)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 8)\r\n      .attr(\"fill\", d => d.color || \"#ff0\")\r\n      .attr(\"opacity\", 0.8)\r\n      .append(\"title\")\r\n      .text(d => `${d.label}\\n${d.description || ''}`);\r\n\r\n    signalGroup.selectAll(\"text\")\r\n      .data(signals)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n      .attr(\"y\", 167)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ccc\")\r\n      .attr(\"font-size\", \"9px\")\r\n      .text(d => d.label);\r\n\r\n    const marker = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 30)\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#ff4081\")\r\n      .attr(\"stroke-width\", 2)\r\n      .style(\"display\", \"none\")\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", () => {\r\n        marker.style(\"display\", \"none\");\r\n        markerLabel.style(\"display\", \"none\");\r\n      });\r\n\r\n    const markerLabel = markerLayer.append(\"text\")\r\n      .attr(\"y\", 20)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ff4081\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .style(\"display\", \"none\")\r\n      .style(\"pointer-events\", \"none\");\r\n\r\n    markerRef.current = marker;\r\n    markerLabelRef.current = markerLabel;\r\n\r\n    const zoom = d3.zoom()\r\n      .scaleExtent([1, 1e8])\r\n      .translateExtent([[0, 0], [width, height]])\r\n      .extent([[0, 0], [width, height]])\r\n      .on(\"zoom\", (event) => {\r\n        const transform = event.transform;\r\n        const zx = transform.rescaleX(x);\r\n        const zoomLevel = transform.k;\r\n\r\n        xAxis.tickFormat(formatAxis(zx));\r\n        zoomLayer.select(\".x-axis\").call(xAxis.scale(zx)).selectAll(\"text\").attr(\"fill\", \"#ccc\");\r\n\r\n        allocLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n          styleAllocLabels(zx);      \r\n\r\n        zoomLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        labelLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) < 40 ? \"none\" : \"block\");\r\n\r\n        const showDetailedSignals = zoomLevel > 5000;\r\n\r\n        signalGroup.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start))\r\n          .style(\"opacity\", d => showSignals && (zx(d.end) - zx(d.start)) > 1 ? 0.8 : 0);\r\n\r\n        signalGroup.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"opacity\", d => {\r\n            const width = zx(d.end) - zx(d.start);\r\n            return showSignals && width > 40 ? 1 : 0;\r\n          });\r\n\r\n        if (markerRef.current && markerRef.current.style(\"display\") !== \"none\") {\r\n          const markerX = +markerRef.current.attr(\"data-freq\");\r\n          const fx = zx(markerX);\r\n          markerRef.current.attr(\"x1\", fx).attr(\"x2\", fx);\r\n          markerLabelRef.current.attr(\"x\", fx);\r\n        }\r\n\r\n        if (hoverLineRef.current) hoverLineRef.current.style(\"display\", \"none\");\r\n\r\n        //hide any that are too close to the last one\r\n        if (showAllocations) {\r\n        let lastX = -Infinity;\r\n        const minSpacing = 50; // px between labels—you can tweak this\r\n\r\n        allocTextLayer.selectAll(\"text\")\r\n          .each(function(d) {\r\n            const cx = (zx(d.start) + zx(d.end)) / 2;\r\n            if (cx - lastX > minSpacing) {\r\n              d3.select(this).style(\"opacity\", 1);\r\n              lastX = cx;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n    svg.call(zoom);\r\n    zoomRef.current = zoom;\r\n  }, [showAllocations, showSignals]);\r\n\r\n  const resetZoom = () => {\r\n    const svg = d3.select(ref.current);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity);\r\n    if (markerRef.current) markerRef.current.style(\"display\", \"none\");\r\n    if (markerLabelRef.current) markerLabelRef.current.style(\"display\", \"none\");\r\n  };\r\n\r\n  const zoomToBand = (band) => {\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n    const scale = width / (x(band.end) - x(band.start));\r\n    const tx = -x(band.start) * scale + margin.left;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  };\r\n\r\n  const goToFrequency = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements.freq.value.trim().toLowerCase();\r\n    let freq = parseFloat(input);\r\n    if (input.includes(\"ghz\")) freq *= 1e9;\r\n    else if (input.includes(\"mhz\")) freq *= 1e6;\r\n    else if (input.includes(\"khz\")) freq *= 1e3;\r\n    if (isNaN(freq)) return;\r\n\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n\r\n    const bandwidth = 100_000;\r\n    const scale = width / (x(freq + bandwidth / 2) - x(freq - bandwidth / 2));\r\n    const tx = -x(freq) * scale + width / 2;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n\r\n    if (markerRef.current) {\r\n      markerRef.current\r\n        .attr(\"x1\", x(freq))\r\n        .attr(\"x2\", x(freq))\r\n        .attr(\"data-freq\", freq)\r\n        .style(\"display\", \"block\");\r\n    }\r\n    if (markerLabelRef.current) {\r\n      const label = freq >= 1e9 ? `${(freq / 1e9).toFixed(3)} GHz`\r\n        : freq >= 1e6 ? `${(freq / 1e6).toFixed(3)} MHz`\r\n        : freq >= 1e3 ? `${(freq / 1e3).toFixed(3)} kHz`\r\n        : `${freq.toFixed(0)} Hz`;\r\n      markerLabelRef.current\r\n        .attr(\"x\", x(freq))\r\n        .text(label)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  };\r\n\r\n  const toggleAllocations = () => {\r\n    setShowAllocations(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#121212', padding: '1rem', minHeight: '100vh', color: 'white' }}>\r\n      <h2>SignalAtlas</h2>\r\n  \r\n      <form onSubmit={goToFrequency} style={{ marginBottom: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"freq\"\r\n          placeholder=\"Enter frequency (e.g. 4625, 2.4GHz)\"\r\n          style={{ padding: '6px', marginRight: '8px', width: '200px' }}\r\n        />\r\n        <button type=\"submit\" style={{ padding: '6px 12px', background: '#333', color: 'white' }}>Go</button>\r\n        <button type=\"button\" onClick={resetZoom} style={{ marginLeft: '10px', padding: '6px 12px' }}>Reset Zoom</button>\r\n      </form>\r\n  \r\n      <div style={{ marginBottom: '10px' }}>\r\n        <label style={{ marginRight: '20px' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showAllocations}\r\n            onChange={() => setShowAllocations(!showAllocations)}\r\n            style={{ marginRight: '6px' }}\r\n          />\r\n          Show Allocations\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showSignals}\r\n            onChange={() => setShowSignals(!showSignals)}\r\n            style={{ marginRight: '6px' }}\r\n          />\r\n          Show Band Markers\r\n        </label>\r\n      </div>\r\n  \r\n      <div style={{ marginBottom: '10px' }}>\r\n        {bands.map((band, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => zoomToBand(band)}\r\n            style={{\r\n              marginRight: '6px',\r\n              padding: '4px 8px',\r\n              background: '#222',\r\n              color: '#fff',\r\n              border: '1px solid #444'\r\n            }}\r\n          >\r\n            {band.name || band.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n  \r\n      <svg ref={ref} width=\"100%\" height=\"400px\" />\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default SpectrumView;","import React from 'react';\nimport SpectrumView from './components/SpectrumView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>📡 SignalAtlas</h1>\n      <SpectrumView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}