{"version":3,"sources":["components/SpectrumView.js","App.js","reportWebVitals.js","index.js"],"names":["SpectrumView","ref","useRef","zoomRef","xScaleRef","markerRef","markerLabelRef","margin","showAllocations","setShowAllocations","useState","useEffect","d3","current","selectAll","remove","svg","attr","style","append","zoomLayer","allocLayer","allocTextLayer","labelLayer","markerLayer","x","domain","range","xAxis","ticks","call","data","allocations","enter","d","start","end","color","text","label","usage","bandsGroup","bands","marker","on","markerLabel","zoom","scaleExtent","translateExtent","extent","event","zx","transform","rescaleX","tickFormat","scale","visibleHz","toFixed","formatAxis","select","left","right","visibleLeft","Math","max","visibleRight","min","width","markerX","fx","React","createElement","backgroundColor","padding","minHeight","onSubmit","e","preventDefault","input","target","elements","freq","value","trim","toLowerCase","parseFloat","includes","isNaN","node","getBoundingClientRect","bandwidth","tx","translate","transition","duration","marginBottom","type","name","placeholder","marginRight","background","onClick","resetZoom","marginLeft","display","checked","onChange","toggleAllocations","prev","map","band","i","key","zoomToBand","border","height","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.08025d70.chunk.js","sourcesContent":["// src/components/SpectrumView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport bands from '../data/bands.json';\r\nimport allocations from '../data/allocations.json';\r\n\r\nconst SpectrumView = () => {\r\n  const ref = useRef();\r\n  const zoomRef = useRef();\r\n  const xScaleRef = useRef();\r\n  const markerRef = useRef();\r\n  const markerLabelRef = useRef();\r\n  const margin = { top: 20, right: 20, bottom: 40, left: 20 };\r\n  const [showAllocations, setShowAllocations] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const width = 1200;\r\n    const height = 300;\r\n\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n\r\n    const svg = d3.select(ref.current)\r\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n      .style(\"background\", \"#1e1e1e\");\r\n\r\n    svg.append(\"defs\")\r\n      .append(\"pattern\")\r\n      .attr(\"id\", \"diagonal-stripes\")\r\n      .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n      .attr(\"width\", 8)\r\n      .attr(\"height\", 8)\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M-2,2 l4,-4 M0,8 l8,-8 M6,10 l4,-4\")\r\n      .attr(\"stroke\", \"white\")\r\n      .attr(\"stroke-opacity\", 0.05)\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    const zoomLayer = svg.append(\"g\").attr(\"class\", \"zoom-layer\");\r\n    const allocLayer = svg.append(\"g\").attr(\"class\", \"alloc-layer\");\r\n    const allocTextLayer = svg.append(\"g\").attr(\"class\", \"alloc-text-layer\");\r\n    const labelLayer = svg.append(\"g\").attr(\"class\", \"label-layer\");\r\n    const markerLayer = svg.append(\"g\").attr(\"class\", \"marker-layer\");\r\n\r\n    const x = d3.scaleLinear()\r\n      .domain([0, 300_000_000_000])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    xScaleRef.current = x;\r\n\r\n    const xAxis = d3.axisBottom(x).ticks(12);\r\n\r\n    const axisGroup = zoomLayer.append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n      .attr(\"class\", \"x-axis\")\r\n      .call(xAxis)\r\n      .selectAll(\"text\")\r\n      .attr(\"fill\", \"#ccc\");\r\n\r\n    const formatAxis = (scale) => {\r\n      const visibleHz = scale.domain()[1] - scale.domain()[0];\r\n      if (visibleHz < 1_000) return d => `${d.toFixed(0)} Hz`;\r\n      if (visibleHz < 1_000_000) return d => `${(d / 1e3).toFixed(2)} kHz`;\r\n      if (visibleHz < 1_000_000_000) return d => `${(d / 1e6).toFixed(2)} MHz`;\r\n      return d => `${(d / 1e9).toFixed(2)} GHz`;\r\n    };\r\n\r\n    allocLayer.selectAll(\"rect\")\r\n      .data(allocations)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 30)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 150)\r\n      .attr(\"fill\", d => d.color || \"#555\")\r\n      .attr(\"fill-opacity\", 0.15)\r\n      .attr(\"class\", \"allocation-band\")\r\n      .style(\"display\", showAllocations ? \"block\" : \"none\")\r\n      .append(\"title\")\r\n      .text(d => `${d.label}: ${d.usage}`);\r\n\r\n    const allocTexts = allocTextLayer.selectAll(\"text\")\r\n      .data(allocations)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n      .attr(\"y\", 190)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#aaa\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .text(d => d.label)\r\n      .style(\"display\", d => showAllocations ? \"block\" : \"none\");\r\n\r\n    const bandsGroup = zoomLayer.append(\"g\");\r\n\r\n    bandsGroup.selectAll(\"rect\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.start))\r\n      .attr(\"y\", 50)\r\n      .attr(\"width\", d => x(d.end) - x(d.start))\r\n      .attr(\"height\", 100)\r\n      .attr(\"fill\", \"url(#diagonal-stripes)\")\r\n      .attr(\"fill-opacity\", 1)\r\n      .attr(\"stroke\", d => d.color)\r\n      .attr(\"stroke-width\", 2)\r\n      .append(\"title\")\r\n      .text(d => d.label);\r\n\r\n    bandsGroup.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => (x(d.start) + x(d.end)) / 2)\r\n      .attr(\"y\", 115)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ccc\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .text(d => d.label);\r\n\r\n    labelLayer.selectAll(\"text\")\r\n      .data(bands)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x((d.start + d.end) / 2))\r\n      .attr(\"y\", 40)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#fff\")\r\n      .attr(\"font-size\", \"14px\")\r\n      .attr(\"font-weight\", \"bold\")\r\n      .text(d => d.label);\r\n\r\n    const marker = markerLayer.append(\"line\")\r\n      .attr(\"y1\", 30)\r\n      .attr(\"y2\", height - margin.bottom)\r\n      .attr(\"stroke\", \"#ff4081\")\r\n      .attr(\"stroke-width\", 2)\r\n      .style(\"display\", \"none\")\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", () => {\r\n        marker.style(\"display\", \"none\");\r\n        markerLabel.style(\"display\", \"none\");\r\n      });\r\n\r\n    const markerLabel = markerLayer.append(\"text\")\r\n      .attr(\"y\", 20)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"fill\", \"#ff4081\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .style(\"display\", \"none\")\r\n      .style(\"pointer-events\", \"none\");\r\n\r\n    markerRef.current = marker;\r\n    markerLabelRef.current = markerLabel;\r\n\r\n    const zoom = d3.zoom()\r\n      .scaleExtent([1, 1e8])\r\n      .translateExtent([[0, 0], [width, height]])\r\n      .extent([[0, 0], [width, height]])\r\n      .on(\"zoom\", (event) => {\r\n        const transform = event.transform;\r\n        const zx = transform.rescaleX(x);\r\n        const visibleHz = zx.domain()[1] - zx.domain()[0];\r\n\r\n        const tickFormat = formatAxis(zx);\r\n        xAxis.tickFormat(tickFormat);\r\n        zoomLayer.select(\".x-axis\").call(xAxis.scale(zx)).selectAll(\"text\").attr(\"fill\", \"#ccc\");\r\n\r\n        allocLayer.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        allocTextLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) > 40 && showAllocations ? \"block\" : \"none\");\r\n\r\n        bandsGroup.selectAll(\"rect\")\r\n          .attr(\"x\", d => zx(d.start))\r\n          .attr(\"width\", d => zx(d.end) - zx(d.start));\r\n\r\n        bandsGroup.selectAll(\"text\")\r\n          .attr(\"x\", d => (zx(d.start) + zx(d.end)) / 2)\r\n          .style(\"display\", d => (zx(d.end) - zx(d.start)) < 40 ? \"none\" : \"block\");\r\n\r\n        labelLayer.selectAll(\"text\")\r\n          .attr(\"x\", d => {\r\n            const left = zx(d.start);\r\n            const right = zx(d.end);\r\n            const visibleLeft = Math.max(left, margin.left);\r\n            const visibleRight = Math.min(right, width - margin.right);\r\n            if (visibleRight < margin.left || visibleLeft > width - margin.right) return -1000;\r\n            return (visibleLeft + visibleRight) / 2;\r\n          })\r\n          .style(\"display\", d => {\r\n            const left = zx(d.start);\r\n            const right = zx(d.end);\r\n            const width = zx(d.end) - zx(d.start);\r\n            return (width < 40 || right < margin.left || left > width - margin.right) ? \"none\" : \"block\";\r\n          });\r\n\r\n        if (markerRef.current && markerRef.current.style(\"display\") !== \"none\") {\r\n          const markerX = +markerRef.current.attr(\"data-freq\");\r\n          const fx = zx(markerX);\r\n          markerRef.current.attr(\"x1\", fx).attr(\"x2\", fx);\r\n          markerLabelRef.current.attr(\"x\", fx);\r\n        }\r\n      });\r\n\r\n    svg.call(zoom);\r\n    zoomRef.current = zoom;\r\n  }, [showAllocations]);\r\n\r\n  const resetZoom = () => {\r\n    const svg = d3.select(ref.current);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity);\r\n    if (markerRef.current) markerRef.current.style(\"display\", \"none\");\r\n    if (markerLabelRef.current) markerLabelRef.current.style(\"display\", \"none\");\r\n  };\r\n\r\n  const zoomToBand = (band) => {\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n    const scale = width / (x(band.end) - x(band.start));\r\n    const tx = -x(band.start) * scale + margin.left;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n  };\r\n\r\n  const goToFrequency = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements.freq.value.trim().toLowerCase();\r\n    let freq = parseFloat(input);\r\n    if (input.includes(\"ghz\")) freq *= 1e9;\r\n    else if (input.includes(\"mhz\")) freq *= 1e6;\r\n    else if (input.includes(\"khz\")) freq *= 1e3;\r\n    if (isNaN(freq)) return;\r\n\r\n    const svg = d3.select(ref.current);\r\n    const width = svg.node().getBoundingClientRect().width;\r\n    const x = xScaleRef.current;\r\n\r\n    const bandwidth = 100_000;\r\n    const scale = width / (x(freq + bandwidth / 2) - x(freq - bandwidth / 2));\r\n    const tx = -x(freq) * scale + width / 2;\r\n    const transform = d3.zoomIdentity.translate(tx, 0).scale(scale);\r\n\r\n    svg.transition().duration(500).call(zoomRef.current.transform, transform);\r\n\r\n    if (markerRef.current) {\r\n      markerRef.current\r\n        .attr(\"x1\", x(freq))\r\n        .attr(\"x2\", x(freq))\r\n        .attr(\"data-freq\", freq)\r\n        .style(\"display\", \"block\");\r\n    }\r\n    if (markerLabelRef.current) {\r\n      const label = freq >= 1e9 ? `${(freq / 1e9).toFixed(3)} GHz`\r\n        : freq >= 1e6 ? `${(freq / 1e6).toFixed(3)} MHz`\r\n        : freq >= 1e3 ? `${(freq / 1e3).toFixed(3)} kHz`\r\n        : `${freq.toFixed(0)} Hz`;\r\n      markerLabelRef.current\r\n        .attr(\"x\", x(freq))\r\n        .text(label)\r\n        .style(\"display\", \"block\");\r\n    }\r\n  };\r\n\r\n  const toggleAllocations = () => {\r\n    setShowAllocations(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#121212', padding: '1rem', minHeight: '100vh', color: 'white' }}>\r\n      <h2>SignalAtlas</h2>\r\n      <form onSubmit={goToFrequency} style={{ marginBottom: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"freq\"\r\n          placeholder=\"Enter frequency (e.g. 4625, 2.4GHz)\"\r\n          style={{ padding: '6px', marginRight: '8px', width: '200px' }}\r\n        />\r\n        <button type=\"submit\" style={{ padding: '6px 12px', background: '#333', color: 'white' }}>Go</button>\r\n        <button type=\"button\" onClick={resetZoom} style={{ marginLeft: '10px', padding: '6px 12px' }}>Reset Zoom</button>\r\n      </form>\r\n      <label style={{ display: 'block', marginBottom: '10px' }}>\r\n        <input type=\"checkbox\" checked={showAllocations} onChange={toggleAllocations} /> Show Allocations\r\n      </label>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        {bands.map((band, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => zoomToBand(band)}\r\n            style={{ marginRight: '6px', padding: '4px 8px', background: '#222', color: '#fff', border: '1px solid #444' }}\r\n          >\r\n            {band.name || band.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <svg ref={ref} width=\"100%\" height=\"400px\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpectrumView;","import React from 'react';\nimport SpectrumView from './components/SpectrumView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>📡 SignalAtlas</h1>\n      <SpectrumView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}